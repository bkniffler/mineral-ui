// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput demo examples Snapshots: controlled 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<Component>
  <MyForm>
    <TextInput
      onChange={[Function]}
      size="large"
      type="text"
      value="Hello World"
    >
      <Styled(WithTheme(Themed(FauxControl)))
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "input",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(input)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "disabled": undefined,
            "onChange": [Function],
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
            "value": "Hello World",
          }
        }
        size="large"
      >
        <WithTheme(Themed(FauxControl))
          className="emotion-4"
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "input",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(input)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "disabled": undefined,
              "onChange": [Function],
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
              "value": "Hello World",
            }
          }
          size="large"
        >
          <Themed(FauxControl)
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "onChange": [Function],
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
                "value": "Hello World",
              }
            }
            size="large"
          >
            <ThemeProvider>
              <ThemeProvider>
                <FauxControl
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "onChange": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                      "value": "Hello World",
                    }
                  }
                  size="large"
                >
                  <Styled(div)
                    className="emotion-4"
                  >
                    <div
                      className="emotion-3"
                    >
                      <Styled(input)
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlPropsIn={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "disabled": undefined,
                            "onChange": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                            "value": "Hello World",
                          }
                        }
                        key="control"
                        onChange={[Function]}
                        size="large"
                        type="text"
                        value="Hello World"
                      >
                        <Styled(input)
                          className="emotion-1"
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "disabled": undefined,
                              "onChange": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                              "value": "Hello World",
                            }
                          }
                          onChange={[Function]}
                          size="large"
                          type="text"
                          value="Hello World"
                        >
                          <input
                            className="emotion-0"
                            onChange={[Function]}
                            size="large"
                            type="text"
                            value="Hello World"
                          />
                        </Styled(input)>
                      </Styled(input)>
                      <Styled(div)>
                        <div
                          className="emotion-2"
                        />
                      </Styled(div)>
                    </div>
                  </Styled(div)>
                </FauxControl>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(FauxControl)>
        </WithTheme(Themed(FauxControl))>
      </Styled(WithTheme(Themed(FauxControl)))>
    </TextInput>
  </MyForm>
</Component>
`;

exports[`TextInput demo examples Snapshots: disabled 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: none;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  color: #afbacc;
  -webkit-text-fill-color: #afbacc;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #afbacc;
  -webkit-text-fill-color: #afbacc;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  defaultValue="Hello World"
  disabled={true}
  size="large"
  type="text"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "input",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(input)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "controlRef": undefined,
        "defaultValue": "Hello World",
        "disabled": true,
        "readOnly": undefined,
        "required": undefined,
        "type": "text",
      }
    }
    disabled={true}
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "input",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(input)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "controlRef": undefined,
          "defaultValue": "Hello World",
          "disabled": true,
          "readOnly": undefined,
          "required": undefined,
          "type": "text",
        }
      }
      disabled={true}
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "input",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(input)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Hello World",
            "disabled": true,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        disabled={true}
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Hello World",
                  "disabled": true,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              disabled={true}
              size="large"
            >
              <Styled(div)
                className="emotion-4"
                disabled={true}
              >
                <div
                  className="emotion-3"
                  disabled={true}
                >
                  <Styled(input)
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Hello World",
                        "disabled": true,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    defaultValue="Hello World"
                    disabled={true}
                    key="control"
                    size="large"
                    type="text"
                  >
                    <Styled(input)
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Hello World",
                          "disabled": true,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Hello World"
                      disabled={true}
                      size="large"
                      type="text"
                    >
                      <input
                        className="emotion-0"
                        defaultValue="Hello World"
                        disabled={true}
                        size="large"
                        type="text"
                      />
                    </Styled(input)>
                  </Styled(input)>
                  <Styled(div)
                    disabled={true}
                  >
                    <div
                      className="emotion-2"
                      disabled={true}
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextInput>
`;

exports[`TextInput demo examples Snapshots: form-field 1`] = `
.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-7 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-7 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-6:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-6:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-6:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-6 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-6 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-5 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-13[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-2 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-4 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-4::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-4::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-4:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-4::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-4::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-4:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-4::-ms-clear {
  display: none;
}

.emotion-4:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-3[type="search"] {
  -webkit-appearance: none;
}

.emotion-3[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-3::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::-ms-clear {
  display: none;
}

.emotion-3:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-12 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-12 *,
.emotion-12 *::before,
.emotion-12 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-1 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-0 {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

.emotion-11 {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-13"
    >
      <FormField
        caption="Surname, family name"
        iconStart={<IconAccountBox />}
        input={[Function]}
        label="Last Name"
        required={true}
        requiredText="Required"
      >
        <Styled(div)>
          <div
            className="emotion-12"
          >
            <label>
              <Styled(div)
                key="formField-11-textWrapper"
              >
                <div
                  className="emotion-1"
                >
                  <span
                    id="formField-11-labelText"
                  >
                    Last Name
                  </span>
                  <Styled(span)>
                    <span
                      className="emotion-0"
                    >
                      Required
                    </span>
                  </Styled(span)>
                </div>
              </Styled(div)>
              <TextInput
                aria-describedby="formField-11-caption"
                iconStart={<IconAccountBox />}
                key="formField-11-control"
                required={true}
                size="large"
                type="text"
              >
                <Styled(WithTheme(Themed(FauxControl)))
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-describedby": "formField-11-caption",
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "controlRef": undefined,
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": true,
                      "type": "text",
                    }
                  }
                  iconStart={<IconAccountBox />}
                  size="large"
                >
                  <WithTheme(Themed(FauxControl))
                    className="emotion-7"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-describedby": "formField-11-caption",
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": true,
                        "type": "text",
                      }
                    }
                    iconStart={<IconAccountBox />}
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-7"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-describedby": "formField-11-caption",
                          "aria-invalid": undefined,
                          "aria-required": true,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": true,
                          "type": "text",
                        }
                      }
                      iconStart={<IconAccountBox />}
                      size="large"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-7"
                            control={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "input",
                                "__emotion_forwardProp": undefined,
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "displayName": "Styled(input)",
                                "render": [Function],
                                "withComponent": [Function],
                              }
                            }
                            controlProps={
                              Object {
                                "aria-describedby": "formField-11-caption",
                                "aria-invalid": undefined,
                                "aria-required": true,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": true,
                                "type": "text",
                              }
                            }
                            iconStart={<IconAccountBox />}
                            size="large"
                          >
                            <Styled(div)
                              className="emotion-7"
                            >
                              <div
                                className="emotion-6"
                              >
                                <IconAccountBox
                                  key="iconStart"
                                  size="1.5em"
                                >
                                  <Icon
                                    rtl={false}
                                    size="1.5em"
                                  >
                                    <Styled(svg)
                                      aria-hidden={true}
                                      focusable="false"
                                      role="img"
                                      rtl={false}
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="emotion-2"
                                        focusable="false"
                                        role="img"
                                        size="1.5em"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M3 5v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5a2 2 0 0 0-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z"
                                          />
                                        </g>
                                      </svg>
                                    </Styled(svg)>
                                  </Icon>
                                </IconAccountBox>
                                <Styled(input)
                                  aria-describedby="formField-11-caption"
                                  aria-required={true}
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "input",
                                      "__emotion_forwardProp": undefined,
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "displayName": "Styled(input)",
                                      "render": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": "formField-11-caption",
                                      "aria-invalid": undefined,
                                      "aria-required": true,
                                      "controlRef": undefined,
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": true,
                                      "type": "text",
                                    }
                                  }
                                  iconStart={<IconAccountBox />}
                                  key="control"
                                  required={true}
                                  size="large"
                                  type="text"
                                >
                                  <Styled(input)
                                    aria-describedby="formField-11-caption"
                                    aria-required={true}
                                    className="emotion-4"
                                    controlPropsIn={
                                      Object {
                                        "aria-describedby": "formField-11-caption",
                                        "aria-invalid": undefined,
                                        "aria-required": true,
                                        "controlRef": undefined,
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": true,
                                        "type": "text",
                                      }
                                    }
                                    iconStart={<IconAccountBox />}
                                    required={true}
                                    size="large"
                                    type="text"
                                  >
                                    <input
                                      aria-describedby="formField-11-caption"
                                      aria-required={true}
                                      className="emotion-3"
                                      required={true}
                                      size="large"
                                      type="text"
                                    />
                                  </Styled(input)>
                                </Styled(input)>
                                <Styled(div)>
                                  <div
                                    className="emotion-5"
                                  />
                                </Styled(div)>
                              </div>
                            </Styled(div)>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </WithTheme(Themed(FauxControl))>
                </Styled(WithTheme(Themed(FauxControl)))>
              </TextInput>
            </label>
            <Styled(div)
              caption="Surname, family name"
              id="formField-11-caption"
              isGroup={false}
            >
              <div
                className="emotion-11"
                id="formField-11-caption"
              >
                Surname, family name
              </div>
            </Styled(div)>
          </div>
        </Styled(div)>
      </FormField>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextInput demo examples Snapshots: icons 1`] = `
.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-5 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-28[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-0 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-2 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-2::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-clear {
  display: none;
}

.emotion-2:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-10 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-9 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-9[type="search"] {
  -webkit-appearance: none;
}

.emotion-9[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-9::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-clear {
  display: none;
}

.emotion-9:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-20 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
}

.emotion-20::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::-ms-clear {
  display: none;
}

.emotion-20:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-19 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
}

.emotion-19[type="search"] {
  -webkit-appearance: none;
}

.emotion-19[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-19::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::-ms-clear {
  display: none;
}

.emotion-19:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<Component>
  <DemoLayout>
    <Styled(div)
      marginBottom="1rem"
    >
      <div
        className="emotion-28"
      >
        <TextInput
          iconStart={<IconCloud />}
          size="large"
          type="text"
        >
          <Styled(WithTheme(Themed(FauxControl)))
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            iconStart={<IconCloud />}
            size="large"
          >
            <WithTheme(Themed(FauxControl))
              className="emotion-5"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              iconStart={<IconCloud />}
              size="large"
            >
              <Themed(FauxControl)
                className="emotion-5"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                iconStart={<IconCloud />}
                size="large"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <FauxControl
                      className="emotion-5"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      iconStart={<IconCloud />}
                      size="large"
                    >
                      <Styled(div)
                        className="emotion-5"
                      >
                        <div
                          className="emotion-4"
                        >
                          <IconCloud
                            key="iconStart"
                            size="1.5em"
                          >
                            <Icon
                              rtl={false}
                              size="1.5em"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-0"
                                  focusable="false"
                                  role="img"
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCloud>
                          <Styled(input)
                            as={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "input",
                                "__emotion_forwardProp": undefined,
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "displayName": "Styled(input)",
                                "render": [Function],
                                "withComponent": [Function],
                              }
                            }
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            iconStart={<IconCloud />}
                            key="control"
                            size="large"
                            type="text"
                          >
                            <Styled(input)
                              className="emotion-2"
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              iconStart={<IconCloud />}
                              size="large"
                              type="text"
                            >
                              <input
                                className="emotion-1"
                                size="large"
                                type="text"
                              />
                            </Styled(input)>
                          </Styled(input)>
                          <Styled(div)>
                            <div
                              className="emotion-3"
                            />
                          </Styled(div)>
                        </div>
                      </Styled(div)>
                    </FauxControl>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(FauxControl)>
            </WithTheme(Themed(FauxControl))>
          </Styled(WithTheme(Themed(FauxControl)))>
        </TextInput>
        <TextInput
          iconEnd={<IconCloud />}
          size="large"
          type="text"
        >
          <Styled(WithTheme(Themed(FauxControl)))
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            iconEnd={<IconCloud />}
            size="large"
          >
            <WithTheme(Themed(FauxControl))
              className="emotion-5"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              iconEnd={<IconCloud />}
              size="large"
            >
              <Themed(FauxControl)
                className="emotion-5"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                iconEnd={<IconCloud />}
                size="large"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <FauxControl
                      className="emotion-5"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      iconEnd={<IconCloud />}
                      size="large"
                    >
                      <Styled(div)
                        className="emotion-5"
                      >
                        <div
                          className="emotion-4"
                        >
                          <Styled(input)
                            as={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "input",
                                "__emotion_forwardProp": undefined,
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "displayName": "Styled(input)",
                                "render": [Function],
                                "withComponent": [Function],
                              }
                            }
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            iconEnd={<IconCloud />}
                            key="control"
                            size="large"
                            type="text"
                          >
                            <Styled(input)
                              className="emotion-10"
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              iconEnd={<IconCloud />}
                              size="large"
                              type="text"
                            >
                              <input
                                className="emotion-9"
                                size="large"
                                type="text"
                              />
                            </Styled(input)>
                          </Styled(input)>
                          <IconCloud
                            key="iconEnd"
                            size="1.5em"
                          >
                            <Icon
                              rtl={false}
                              size="1.5em"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-0"
                                  focusable="false"
                                  role="img"
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCloud>
                          <Styled(div)>
                            <div
                              className="emotion-3"
                            />
                          </Styled(div)>
                        </div>
                      </Styled(div)>
                    </FauxControl>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(FauxControl)>
            </WithTheme(Themed(FauxControl))>
          </Styled(WithTheme(Themed(FauxControl)))>
        </TextInput>
        <TextInput
          iconEnd={<IconCloud />}
          iconStart={<IconCloud />}
          size="large"
          type="text"
        >
          <Styled(WithTheme(Themed(FauxControl)))
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            iconEnd={<IconCloud />}
            iconStart={<IconCloud />}
            size="large"
          >
            <WithTheme(Themed(FauxControl))
              className="emotion-5"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              iconEnd={<IconCloud />}
              iconStart={<IconCloud />}
              size="large"
            >
              <Themed(FauxControl)
                className="emotion-5"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                iconEnd={<IconCloud />}
                iconStart={<IconCloud />}
                size="large"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <FauxControl
                      className="emotion-5"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      iconEnd={<IconCloud />}
                      iconStart={<IconCloud />}
                      size="large"
                    >
                      <Styled(div)
                        className="emotion-5"
                      >
                        <div
                          className="emotion-4"
                        >
                          <IconCloud
                            key="iconStart"
                            size="1.5em"
                          >
                            <Icon
                              rtl={false}
                              size="1.5em"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-0"
                                  focusable="false"
                                  role="img"
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCloud>
                          <Styled(input)
                            as={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "input",
                                "__emotion_forwardProp": undefined,
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "displayName": "Styled(input)",
                                "render": [Function],
                                "withComponent": [Function],
                              }
                            }
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            iconEnd={<IconCloud />}
                            iconStart={<IconCloud />}
                            key="control"
                            size="large"
                            type="text"
                          >
                            <Styled(input)
                              className="emotion-20"
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              iconEnd={<IconCloud />}
                              iconStart={<IconCloud />}
                              size="large"
                              type="text"
                            >
                              <input
                                className="emotion-19"
                                size="large"
                                type="text"
                              />
                            </Styled(input)>
                          </Styled(input)>
                          <IconCloud
                            key="iconEnd"
                            size="1.5em"
                          >
                            <Icon
                              rtl={false}
                              size="1.5em"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-0"
                                  focusable="false"
                                  role="img"
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCloud>
                          <Styled(div)>
                            <div
                              className="emotion-3"
                            />
                          </Styled(div)>
                        </div>
                      </Styled(div)>
                    </FauxControl>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(FauxControl)>
            </WithTheme(Themed(FauxControl))>
          </Styled(WithTheme(Themed(FauxControl)))>
        </TextInput>
      </div>
    </Styled(div)>
  </DemoLayout>
</Component>
`;

exports[`TextInput demo examples Snapshots: input-ref 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-11[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-10 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-10 *,
.emotion-10 *::before,
.emotion-10 *::after {
  box-sizing: inherit;
}

.emotion-10:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-10:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-10:focus:active,
.emotion-10:focus:hover {
  border-color: #c8d1e0;
}

.emotion-10:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-10::-moz-focus-inner {
  border: 0;
}

.emotion-10 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-10 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-10 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-10 [role="img"]:only-child {
  margin: 0;
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-8 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-8:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-8:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <DemoLayout>
      <Styled(div)
        marginBottom="1rem"
      >
        <div
          className="emotion-11"
        >
          <TextInput
            inputRef={[Function]}
            size="large"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": [Function],
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": [Function],
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": [Function],
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": [Function],
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": [Function],
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              controlRef={[Function]}
                              key="control"
                              size="large"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-1"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": [Function],
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                controlRef={[Function]}
                                size="large"
                                type="text"
                              >
                                <input
                                  className="emotion-0"
                                  size="large"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            onClick={[Function]}
            size="large"
          >
            <Button
              forwardedRef={null}
              onClick={[Function]}
              size="large"
            >
              <Styled(button)
                onClick={[Function]}
                size="large"
                text="Focus the input"
              >
                <button
                  className="emotion-10"
                  onClick={[Function]}
                  size="large"
                >
                  <Styled(span)>
                    <span
                      className="emotion-9"
                    >
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-8"
                          size="large"
                        >
                          Focus the input
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
      </Styled(div)>
    </DemoLayout>
  </MyForm>
</Component>
`;

exports[`TextInput demo examples Snapshots: invalid 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  invalid={true}
  size="large"
  type="text"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "input",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(input)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": true,
        "aria-required": undefined,
        "controlRef": undefined,
        "disabled": undefined,
        "readOnly": undefined,
        "required": undefined,
        "type": "text",
      }
    }
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "input",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(input)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": true,
          "aria-required": undefined,
          "controlRef": undefined,
          "disabled": undefined,
          "readOnly": undefined,
          "required": undefined,
          "type": "text",
        }
      }
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "input",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(input)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": true,
            "aria-required": undefined,
            "controlRef": undefined,
            "disabled": undefined,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": true,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    aria-invalid={true}
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": true,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    key="control"
                    size="large"
                    type="text"
                  >
                    <Styled(input)
                      aria-invalid={true}
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": true,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                      type="text"
                    >
                      <input
                        aria-invalid={true}
                        className="emotion-0"
                        size="large"
                        type="text"
                      />
                    </Styled(input)>
                  </Styled(input)>
                  <Styled(div)>
                    <div
                      className="emotion-2"
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextInput>
`;

exports[`TextInput demo examples Snapshots: kitchen-sink 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-90[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-36 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-74 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-74 [role="img"] {
  color: #de1b1b;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-74 [role="img"]:last-of-type {
  color: #de1b1b;
}

.emotion-73 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-73 *,
.emotion-73 *::before,
.emotion-73 *::after {
  box-sizing: inherit;
}

.emotion-73:hover > div:last-child {
  border-color: #f55353;
}

.emotion-73:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-73:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-73 [role="img"] {
  color: #de1b1b;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-73 [role="img"]:last-of-type {
  color: #de1b1b;
}

.emotion-69 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-69::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-69::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-69:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-69::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-69::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-69:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-69::-ms-clear {
  display: none;
}

.emotion-69:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-68 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-68[type="search"] {
  -webkit-appearance: none;
}

.emotion-68[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-68::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-68::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-68:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-68::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-68::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-68:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-68::-ms-clear {
  display: none;
}

.emotion-68:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-72 {
  background-color: #ffffff;
  border-color: #de1b1b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-10 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-9 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-9[type="search"] {
  -webkit-appearance: none;
}

.emotion-9[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-9::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-clear {
  display: none;
}

.emotion-9:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-18 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-18::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-ms-clear {
  display: none;
}

.emotion-18:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-17 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-17[type="search"] {
  -webkit-appearance: none;
}

.emotion-17[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-17::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-clear {
  display: none;
}

.emotion-17:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-28 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
}

.emotion-28::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::-ms-clear {
  display: none;
}

.emotion-28:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-27 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
}

.emotion-27[type="search"] {
  -webkit-appearance: none;
}

.emotion-27[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-27::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27::-ms-clear {
  display: none;
}

.emotion-27:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-8 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0.2857142857142857em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
}

.emotion-19 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0.2857142857142857em;
  margin-right: 1.1428571428571428em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
}

.emotion-140 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1);
  width: 1.5em;
}

.emotion-37 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0;
  margin-right: 0.2857142857142857em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
}

.emotion-48 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0.2857142857142857em;
  margin-right: 0;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
}

.emotion-78 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-79 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 0.75em;
  margin-left: 0;
  margin-right: 0.3333333333333333em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
}

.emotion-81 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
}

.emotion-81::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81::-ms-clear {
  display: none;
}

.emotion-81:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-80 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0;
  padding-right: 0;
}

.emotion-80[type="search"] {
  -webkit-appearance: none;
}

.emotion-80[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-80::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-80::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-80:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-80::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-80::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-80:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-80::-ms-clear {
  display: none;
}

.emotion-80:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-82 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 0.75em;
  margin-left: 0.3333333333333333em;
  margin-right: 0;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
}

.emotion-160 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-160::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-160::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-160:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-160::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-160::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-160:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-160::-ms-clear {
  display: none;
}

.emotion-160:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-159 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-159[type="search"] {
  -webkit-appearance: none;
}

.emotion-159[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-159::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-159::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-159:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-159::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-159::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-159:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-159::-ms-clear {
  display: none;
}

.emotion-159:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-174 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1);
  width: 1em;
}

<KitchenSink>
  <div>
    <DemoLayout>
      <Styled(div)
        marginBottom="1rem"
      >
        <div
          className="emotion-90"
        >
          <TextInput
            defaultValue="000"
            size="large"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "000",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="000"
                              key="control"
                              size="large"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-1"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="000"
                                size="large"
                                type="text"
                              >
                                <input
                                  className="emotion-0"
                                  defaultValue="000"
                                  size="large"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <TextInput
            defaultValue="000"
            prefix="$"
            size="large"
            type="number"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              prefix="$"
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "000",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                prefix="$"
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  prefix="$"
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        prefix="$"
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(span)
                              key="prefix"
                              size="large"
                            >
                              <span
                                className="emotion-8"
                                size="large"
                              >
                                $
                              </span>
                            </Styled(span)>
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              defaultValue="000"
                              key="control"
                              prefix="$"
                              size="large"
                              type="number"
                            >
                              <Styled(input)
                                className="emotion-10"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                defaultValue="000"
                                prefix="$"
                                size="large"
                                type="number"
                              >
                                <input
                                  className="emotion-9"
                                  defaultValue="000"
                                  prefix="$"
                                  size="large"
                                  type="number"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <TextInput
            defaultValue="000"
            size="large"
            suffix="cm"
            type="number"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              size="large"
              suffix="cm"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "000",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                size="large"
                suffix="cm"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  size="large"
                  suffix="cm"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        size="large"
                        suffix="cm"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              defaultValue="000"
                              key="control"
                              size="large"
                              suffix="cm"
                              type="number"
                            >
                              <Styled(input)
                                className="emotion-18"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                defaultValue="000"
                                size="large"
                                suffix="cm"
                                type="number"
                              >
                                <input
                                  className="emotion-17"
                                  defaultValue="000"
                                  size="large"
                                  type="number"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(span)
                              key="suffix"
                              size="large"
                            >
                              <span
                                className="emotion-19"
                                size="large"
                              >
                                cm
                              </span>
                            </Styled(span)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <TextInput
            defaultValue="000"
            prefix="$"
            size="large"
            suffix="cm"
            type="number"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              prefix="$"
              size="large"
              suffix="cm"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "000",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                prefix="$"
                size="large"
                suffix="cm"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  prefix="$"
                  size="large"
                  suffix="cm"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        prefix="$"
                        size="large"
                        suffix="cm"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(span)
                              key="prefix"
                              size="large"
                            >
                              <span
                                className="emotion-8"
                                size="large"
                              >
                                $
                              </span>
                            </Styled(span)>
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              defaultValue="000"
                              key="control"
                              prefix="$"
                              size="large"
                              suffix="cm"
                              type="number"
                            >
                              <Styled(input)
                                className="emotion-28"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                defaultValue="000"
                                prefix="$"
                                size="large"
                                suffix="cm"
                                type="number"
                              >
                                <input
                                  className="emotion-27"
                                  defaultValue="000"
                                  prefix="$"
                                  size="large"
                                  type="number"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(span)
                              key="suffix"
                              size="large"
                            >
                              <span
                                className="emotion-19"
                                size="large"
                              >
                                cm
                              </span>
                            </Styled(span)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <TextInput
            defaultValue="000"
            iconStart={<IconCloud />}
            prefix="$"
            size="large"
            type="number"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              iconStart={<IconCloud />}
              prefix="$"
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "000",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                iconStart={<IconCloud />}
                prefix="$"
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  iconStart={<IconCloud />}
                  prefix="$"
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        iconStart={<IconCloud />}
                        prefix="$"
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <IconCloud
                              key="iconStart"
                              size="1.5em"
                            >
                              <Icon
                                rtl={false}
                                size="1.5em"
                              >
                                <Styled(svg)
                                  aria-hidden={true}
                                  focusable="false"
                                  role="img"
                                  rtl={false}
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="emotion-36"
                                    focusable="false"
                                    role="img"
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                      />
                                    </g>
                                  </svg>
                                </Styled(svg)>
                              </Icon>
                            </IconCloud>
                            <Styled(span)
                              iconStart={<IconCloud />}
                              key="prefix"
                              size="large"
                            >
                              <span
                                className="emotion-37"
                                size="large"
                              >
                                $
                              </span>
                            </Styled(span)>
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              defaultValue="000"
                              iconStart={<IconCloud />}
                              key="control"
                              prefix="$"
                              size="large"
                              type="number"
                            >
                              <Styled(input)
                                className="emotion-10"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                defaultValue="000"
                                iconStart={<IconCloud />}
                                prefix="$"
                                size="large"
                                type="number"
                              >
                                <input
                                  className="emotion-9"
                                  defaultValue="000"
                                  prefix="$"
                                  size="large"
                                  type="number"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <TextInput
            defaultValue="000"
            iconEnd={<IconBackspace />}
            size="large"
            suffix="cm"
            type="number"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              iconEnd={<IconBackspace />}
              size="large"
              suffix="cm"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "000",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                iconEnd={<IconBackspace />}
                size="large"
                suffix="cm"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  iconEnd={<IconBackspace />}
                  size="large"
                  suffix="cm"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        iconEnd={<IconBackspace />}
                        size="large"
                        suffix="cm"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              defaultValue="000"
                              iconEnd={<IconBackspace />}
                              key="control"
                              size="large"
                              suffix="cm"
                              type="number"
                            >
                              <Styled(input)
                                className="emotion-18"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                defaultValue="000"
                                iconEnd={<IconBackspace />}
                                size="large"
                                suffix="cm"
                                type="number"
                              >
                                <input
                                  className="emotion-17"
                                  defaultValue="000"
                                  size="large"
                                  type="number"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(span)
                              iconEnd={<IconBackspace />}
                              key="suffix"
                              size="large"
                            >
                              <span
                                className="emotion-48"
                                size="large"
                              >
                                cm
                              </span>
                            </Styled(span)>
                            <IconBackspace
                              key="iconEnd"
                              size="1.5em"
                            >
                              <Icon
                                rtl={true}
                                size="1.5em"
                              >
                                <Styled(svg)
                                  aria-hidden={true}
                                  focusable="false"
                                  role="img"
                                  rtl={true}
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="emotion-36"
                                    focusable="false"
                                    role="img"
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                      />
                                    </g>
                                  </svg>
                                </Styled(svg)>
                              </Icon>
                            </IconBackspace>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <TextInput
            defaultValue="000"
            iconEnd={<IconBackspace />}
            iconStart={<IconCloud />}
            prefix="$"
            size="large"
            suffix="cm"
            type="number"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              iconEnd={<IconBackspace />}
              iconStart={<IconCloud />}
              prefix="$"
              size="large"
              suffix="cm"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "000",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                iconEnd={<IconBackspace />}
                iconStart={<IconCloud />}
                prefix="$"
                size="large"
                suffix="cm"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  iconEnd={<IconBackspace />}
                  iconStart={<IconCloud />}
                  prefix="$"
                  size="large"
                  suffix="cm"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        iconEnd={<IconBackspace />}
                        iconStart={<IconCloud />}
                        prefix="$"
                        size="large"
                        suffix="cm"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <IconCloud
                              key="iconStart"
                              size="1.5em"
                            >
                              <Icon
                                rtl={false}
                                size="1.5em"
                              >
                                <Styled(svg)
                                  aria-hidden={true}
                                  focusable="false"
                                  role="img"
                                  rtl={false}
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="emotion-36"
                                    focusable="false"
                                    role="img"
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                      />
                                    </g>
                                  </svg>
                                </Styled(svg)>
                              </Icon>
                            </IconCloud>
                            <Styled(span)
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              key="prefix"
                              size="large"
                            >
                              <span
                                className="emotion-37"
                                size="large"
                              >
                                $
                              </span>
                            </Styled(span)>
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              defaultValue="000"
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              key="control"
                              prefix="$"
                              size="large"
                              suffix="cm"
                              type="number"
                            >
                              <Styled(input)
                                className="emotion-28"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                defaultValue="000"
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                prefix="$"
                                size="large"
                                suffix="cm"
                                type="number"
                              >
                                <input
                                  className="emotion-27"
                                  defaultValue="000"
                                  prefix="$"
                                  size="large"
                                  type="number"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(span)
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              key="suffix"
                              size="large"
                            >
                              <span
                                className="emotion-48"
                                size="large"
                              >
                                cm
                              </span>
                            </Styled(span)>
                            <IconBackspace
                              key="iconEnd"
                              size="1.5em"
                            >
                              <Icon
                                rtl={true}
                                size="1.5em"
                              >
                                <Styled(svg)
                                  aria-hidden={true}
                                  focusable="false"
                                  role="img"
                                  rtl={true}
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="emotion-36"
                                    focusable="false"
                                    role="img"
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                      />
                                    </g>
                                  </svg>
                                </Styled(svg)>
                              </Icon>
                            </IconBackspace>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <TextInput
            defaultValue="000"
            size="large"
            suffix="cm"
            type="number"
            variant="danger"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              size="large"
              suffix="cm"
              variant="danger"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-74"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "000",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                size="large"
                suffix="cm"
                variant="danger"
              >
                <Themed(FauxControl)
                  className="emotion-74"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  size="large"
                  suffix="cm"
                  variant="danger"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-74"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        size="large"
                        suffix="cm"
                        variant="danger"
                      >
                        <Styled(div)
                          className="emotion-74"
                          variant="danger"
                        >
                          <div
                            className="emotion-73"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              defaultValue="000"
                              key="control"
                              size="large"
                              suffix="cm"
                              type="number"
                              variant="danger"
                            >
                              <Styled(input)
                                className="emotion-69"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                defaultValue="000"
                                size="large"
                                suffix="cm"
                                type="number"
                                variant="danger"
                              >
                                <input
                                  className="emotion-68"
                                  defaultValue="000"
                                  size="large"
                                  type="number"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(span)
                              key="suffix"
                              size="large"
                              variant="danger"
                            >
                              <span
                                className="emotion-48"
                                size="large"
                              >
                                cm
                              </span>
                            </Styled(span)>
                            <IconDanger
                              key="iconEnd"
                              size="1.5em"
                            >
                              <Icon
                                rtl={false}
                                size="1.5em"
                              >
                                <Styled(svg)
                                  aria-hidden={true}
                                  focusable="false"
                                  role="img"
                                  rtl={false}
                                  size="1.5em"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="emotion-36"
                                    focusable="false"
                                    role="img"
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                      />
                                    </g>
                                  </svg>
                                </Styled(svg)>
                              </Icon>
                            </IconDanger>
                            <Styled(div)
                              variant="danger"
                            >
                              <div
                                className="emotion-72"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <TextInput
            defaultValue="000"
            iconEnd={<IconBackspace />}
            iconStart={<IconCloud />}
            prefix="$"
            size="small"
            suffix="cm"
            type="number"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "000",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              iconEnd={<IconBackspace />}
              iconStart={<IconCloud />}
              prefix="$"
              size="small"
              suffix="cm"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "000",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                iconEnd={<IconBackspace />}
                iconStart={<IconCloud />}
                prefix="$"
                size="small"
                suffix="cm"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "000",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "number",
                    }
                  }
                  iconEnd={<IconBackspace />}
                  iconStart={<IconCloud />}
                  prefix="$"
                  size="small"
                  suffix="cm"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        iconEnd={<IconBackspace />}
                        iconStart={<IconCloud />}
                        prefix="$"
                        size="small"
                        suffix="cm"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <IconCloud
                              key="iconStart"
                              size="medium"
                            >
                              <Icon
                                rtl={false}
                                size="medium"
                              >
                                <Styled(svg)
                                  aria-hidden={true}
                                  focusable="false"
                                  role="img"
                                  rtl={false}
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="emotion-78"
                                    focusable="false"
                                    role="img"
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                      />
                                    </g>
                                  </svg>
                                </Styled(svg)>
                              </Icon>
                            </IconCloud>
                            <Styled(span)
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              key="prefix"
                              size="small"
                            >
                              <span
                                className="emotion-79"
                                size="small"
                              >
                                $
                              </span>
                            </Styled(span)>
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              defaultValue="000"
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              key="control"
                              prefix="$"
                              size="small"
                              suffix="cm"
                              type="number"
                            >
                              <Styled(input)
                                className="emotion-81"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "000",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "number",
                                  }
                                }
                                defaultValue="000"
                                iconEnd={<IconBackspace />}
                                iconStart={<IconCloud />}
                                prefix="$"
                                size="small"
                                suffix="cm"
                                type="number"
                              >
                                <input
                                  className="emotion-80"
                                  defaultValue="000"
                                  prefix="$"
                                  size="small"
                                  type="number"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(span)
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              key="suffix"
                              size="small"
                            >
                              <span
                                className="emotion-82"
                                size="small"
                              >
                                cm
                              </span>
                            </Styled(span)>
                            <IconBackspace
                              key="iconEnd"
                              size="medium"
                            >
                              <Icon
                                rtl={true}
                                size="medium"
                              >
                                <Styled(svg)
                                  aria-hidden={true}
                                  focusable="false"
                                  role="img"
                                  rtl={true}
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden={true}
                                    className="emotion-78"
                                    focusable="false"
                                    role="img"
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <g>
                                      <path
                                        d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                      />
                                    </g>
                                  </svg>
                                </Styled(svg)>
                              </Icon>
                            </IconBackspace>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
        </div>
      </Styled(div)>
    </DemoLayout>
    <div
      dir="rtl"
    >
      <h3>
        RTL
      </h3>
      <ThemeProvider>
        <ThemeProvider>
          <DemoLayout>
            <Styled(div)
              marginBottom="1rem"
            >
              <div
                className="emotion-90"
              >
                <TextInput
                  defaultValue="000"
                  size="large"
                  type="text"
                >
                  <Styled(WithTheme(Themed(FauxControl)))
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                  >
                    <WithTheme(Themed(FauxControl))
                      className="emotion-4"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "000",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      size="large"
                    >
                      <Themed(FauxControl)
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="large"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <FauxControl
                              className="emotion-4"
                              control={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              size="large"
                            >
                              <Styled(div)
                                className="emotion-4"
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <Styled(input)
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": undefined,
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "displayName": "Styled(input)",
                                        "render": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    controlPropsIn={
                                      Object {
                                        "aria-invalid": undefined,
                                        "aria-required": undefined,
                                        "controlRef": undefined,
                                        "defaultValue": "000",
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": undefined,
                                        "type": "text",
                                      }
                                    }
                                    defaultValue="000"
                                    key="control"
                                    size="large"
                                    type="text"
                                  >
                                    <Styled(input)
                                      className="emotion-1"
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "text",
                                        }
                                      }
                                      defaultValue="000"
                                      size="large"
                                      type="text"
                                    >
                                      <input
                                        className="emotion-0"
                                        defaultValue="000"
                                        size="large"
                                        type="text"
                                      />
                                    </Styled(input)>
                                  </Styled(input)>
                                  <Styled(div)>
                                    <div
                                      className="emotion-2"
                                    />
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </FauxControl>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(FauxControl)>
                    </WithTheme(Themed(FauxControl))>
                  </Styled(WithTheme(Themed(FauxControl)))>
                </TextInput>
                <TextInput
                  defaultValue="000"
                  prefix="$"
                  size="large"
                  type="number"
                >
                  <Styled(WithTheme(Themed(FauxControl)))
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    prefix="$"
                    size="large"
                  >
                    <WithTheme(Themed(FauxControl))
                      className="emotion-4"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "000",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      prefix="$"
                      size="large"
                    >
                      <Themed(FauxControl)
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        prefix="$"
                        size="large"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <FauxControl
                              className="emotion-4"
                              control={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              prefix="$"
                              size="large"
                            >
                              <Styled(div)
                                className="emotion-4"
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <Styled(span)
                                    key="prefix"
                                    size="large"
                                  >
                                    <span
                                      className="emotion-19"
                                      size="large"
                                    >
                                      $
                                    </span>
                                  </Styled(span)>
                                  <Styled(input)
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": undefined,
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "displayName": "Styled(input)",
                                        "render": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    controlPropsIn={
                                      Object {
                                        "aria-invalid": undefined,
                                        "aria-required": undefined,
                                        "controlRef": undefined,
                                        "defaultValue": "000",
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": undefined,
                                        "type": "number",
                                      }
                                    }
                                    defaultValue="000"
                                    key="control"
                                    prefix="$"
                                    size="large"
                                    type="number"
                                  >
                                    <Styled(input)
                                      className="emotion-18"
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      defaultValue="000"
                                      prefix="$"
                                      size="large"
                                      type="number"
                                    >
                                      <input
                                        className="emotion-17"
                                        defaultValue="000"
                                        prefix="$"
                                        size="large"
                                        type="number"
                                      />
                                    </Styled(input)>
                                  </Styled(input)>
                                  <Styled(div)>
                                    <div
                                      className="emotion-2"
                                    />
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </FauxControl>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(FauxControl)>
                    </WithTheme(Themed(FauxControl))>
                  </Styled(WithTheme(Themed(FauxControl)))>
                </TextInput>
                <TextInput
                  defaultValue="000"
                  size="large"
                  suffix="cm"
                  type="number"
                >
                  <Styled(WithTheme(Themed(FauxControl)))
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    size="large"
                    suffix="cm"
                  >
                    <WithTheme(Themed(FauxControl))
                      className="emotion-4"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "000",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      size="large"
                      suffix="cm"
                    >
                      <Themed(FauxControl)
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        size="large"
                        suffix="cm"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <FauxControl
                              className="emotion-4"
                              control={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              size="large"
                              suffix="cm"
                            >
                              <Styled(div)
                                className="emotion-4"
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <Styled(input)
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": undefined,
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "displayName": "Styled(input)",
                                        "render": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    controlPropsIn={
                                      Object {
                                        "aria-invalid": undefined,
                                        "aria-required": undefined,
                                        "controlRef": undefined,
                                        "defaultValue": "000",
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": undefined,
                                        "type": "number",
                                      }
                                    }
                                    defaultValue="000"
                                    key="control"
                                    size="large"
                                    suffix="cm"
                                    type="number"
                                  >
                                    <Styled(input)
                                      className="emotion-10"
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      defaultValue="000"
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                    >
                                      <input
                                        className="emotion-9"
                                        defaultValue="000"
                                        size="large"
                                        type="number"
                                      />
                                    </Styled(input)>
                                  </Styled(input)>
                                  <Styled(span)
                                    key="suffix"
                                    size="large"
                                  >
                                    <span
                                      className="emotion-8"
                                      size="large"
                                    >
                                      cm
                                    </span>
                                  </Styled(span)>
                                  <Styled(div)>
                                    <div
                                      className="emotion-2"
                                    />
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </FauxControl>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(FauxControl)>
                    </WithTheme(Themed(FauxControl))>
                  </Styled(WithTheme(Themed(FauxControl)))>
                </TextInput>
                <TextInput
                  defaultValue="000"
                  prefix="$"
                  size="large"
                  suffix="cm"
                  type="number"
                >
                  <Styled(WithTheme(Themed(FauxControl)))
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    prefix="$"
                    size="large"
                    suffix="cm"
                  >
                    <WithTheme(Themed(FauxControl))
                      className="emotion-4"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "000",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      prefix="$"
                      size="large"
                      suffix="cm"
                    >
                      <Themed(FauxControl)
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        prefix="$"
                        size="large"
                        suffix="cm"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <FauxControl
                              className="emotion-4"
                              control={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              prefix="$"
                              size="large"
                              suffix="cm"
                            >
                              <Styled(div)
                                className="emotion-4"
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <Styled(span)
                                    key="prefix"
                                    size="large"
                                  >
                                    <span
                                      className="emotion-19"
                                      size="large"
                                    >
                                      $
                                    </span>
                                  </Styled(span)>
                                  <Styled(input)
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": undefined,
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "displayName": "Styled(input)",
                                        "render": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    controlPropsIn={
                                      Object {
                                        "aria-invalid": undefined,
                                        "aria-required": undefined,
                                        "controlRef": undefined,
                                        "defaultValue": "000",
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": undefined,
                                        "type": "number",
                                      }
                                    }
                                    defaultValue="000"
                                    key="control"
                                    prefix="$"
                                    size="large"
                                    suffix="cm"
                                    type="number"
                                  >
                                    <Styled(input)
                                      className="emotion-28"
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      defaultValue="000"
                                      prefix="$"
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                    >
                                      <input
                                        className="emotion-27"
                                        defaultValue="000"
                                        prefix="$"
                                        size="large"
                                        type="number"
                                      />
                                    </Styled(input)>
                                  </Styled(input)>
                                  <Styled(span)
                                    key="suffix"
                                    size="large"
                                  >
                                    <span
                                      className="emotion-8"
                                      size="large"
                                    >
                                      cm
                                    </span>
                                  </Styled(span)>
                                  <Styled(div)>
                                    <div
                                      className="emotion-2"
                                    />
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </FauxControl>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(FauxControl)>
                    </WithTheme(Themed(FauxControl))>
                  </Styled(WithTheme(Themed(FauxControl)))>
                </TextInput>
                <TextInput
                  defaultValue="000"
                  iconStart={<IconCloud />}
                  prefix="$"
                  size="large"
                  type="number"
                >
                  <Styled(WithTheme(Themed(FauxControl)))
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    iconStart={<IconCloud />}
                    prefix="$"
                    size="large"
                  >
                    <WithTheme(Themed(FauxControl))
                      className="emotion-4"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "000",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      iconStart={<IconCloud />}
                      prefix="$"
                      size="large"
                    >
                      <Themed(FauxControl)
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        iconStart={<IconCloud />}
                        prefix="$"
                        size="large"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <FauxControl
                              className="emotion-4"
                              control={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              iconStart={<IconCloud />}
                              prefix="$"
                              size="large"
                            >
                              <Styled(div)
                                className="emotion-4"
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <IconCloud
                                    key="iconStart"
                                    size="1.5em"
                                  >
                                    <Icon
                                      rtl={false}
                                      size="1.5em"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="1.5em"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-36"
                                          focusable="false"
                                          role="img"
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <path
                                              d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconCloud>
                                  <Styled(span)
                                    iconStart={<IconCloud />}
                                    key="prefix"
                                    size="large"
                                  >
                                    <span
                                      className="emotion-48"
                                      size="large"
                                    >
                                      $
                                    </span>
                                  </Styled(span)>
                                  <Styled(input)
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": undefined,
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "displayName": "Styled(input)",
                                        "render": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    controlPropsIn={
                                      Object {
                                        "aria-invalid": undefined,
                                        "aria-required": undefined,
                                        "controlRef": undefined,
                                        "defaultValue": "000",
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": undefined,
                                        "type": "number",
                                      }
                                    }
                                    defaultValue="000"
                                    iconStart={<IconCloud />}
                                    key="control"
                                    prefix="$"
                                    size="large"
                                    type="number"
                                  >
                                    <Styled(input)
                                      className="emotion-18"
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      defaultValue="000"
                                      iconStart={<IconCloud />}
                                      prefix="$"
                                      size="large"
                                      type="number"
                                    >
                                      <input
                                        className="emotion-17"
                                        defaultValue="000"
                                        prefix="$"
                                        size="large"
                                        type="number"
                                      />
                                    </Styled(input)>
                                  </Styled(input)>
                                  <Styled(div)>
                                    <div
                                      className="emotion-2"
                                    />
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </FauxControl>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(FauxControl)>
                    </WithTheme(Themed(FauxControl))>
                  </Styled(WithTheme(Themed(FauxControl)))>
                </TextInput>
                <TextInput
                  defaultValue="000"
                  iconEnd={<IconBackspace />}
                  size="large"
                  suffix="cm"
                  type="number"
                >
                  <Styled(WithTheme(Themed(FauxControl)))
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    iconEnd={<IconBackspace />}
                    size="large"
                    suffix="cm"
                  >
                    <WithTheme(Themed(FauxControl))
                      className="emotion-4"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "000",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      iconEnd={<IconBackspace />}
                      size="large"
                      suffix="cm"
                    >
                      <Themed(FauxControl)
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        iconEnd={<IconBackspace />}
                        size="large"
                        suffix="cm"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <FauxControl
                              className="emotion-4"
                              control={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              iconEnd={<IconBackspace />}
                              size="large"
                              suffix="cm"
                            >
                              <Styled(div)
                                className="emotion-4"
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <Styled(input)
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": undefined,
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "displayName": "Styled(input)",
                                        "render": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    controlPropsIn={
                                      Object {
                                        "aria-invalid": undefined,
                                        "aria-required": undefined,
                                        "controlRef": undefined,
                                        "defaultValue": "000",
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": undefined,
                                        "type": "number",
                                      }
                                    }
                                    defaultValue="000"
                                    iconEnd={<IconBackspace />}
                                    key="control"
                                    size="large"
                                    suffix="cm"
                                    type="number"
                                  >
                                    <Styled(input)
                                      className="emotion-10"
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      defaultValue="000"
                                      iconEnd={<IconBackspace />}
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                    >
                                      <input
                                        className="emotion-9"
                                        defaultValue="000"
                                        size="large"
                                        type="number"
                                      />
                                    </Styled(input)>
                                  </Styled(input)>
                                  <Styled(span)
                                    iconEnd={<IconBackspace />}
                                    key="suffix"
                                    size="large"
                                  >
                                    <span
                                      className="emotion-37"
                                      size="large"
                                    >
                                      cm
                                    </span>
                                  </Styled(span)>
                                  <IconBackspace
                                    key="iconEnd"
                                    size="1.5em"
                                  >
                                    <Icon
                                      rtl={true}
                                      size="1.5em"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={true}
                                        size="1.5em"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-140"
                                          focusable="false"
                                          role="img"
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <path
                                              d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconBackspace>
                                  <Styled(div)>
                                    <div
                                      className="emotion-2"
                                    />
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </FauxControl>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(FauxControl)>
                    </WithTheme(Themed(FauxControl))>
                  </Styled(WithTheme(Themed(FauxControl)))>
                </TextInput>
                <TextInput
                  defaultValue="000"
                  iconEnd={<IconBackspace />}
                  iconStart={<IconCloud />}
                  prefix="$"
                  size="large"
                  suffix="cm"
                  type="number"
                >
                  <Styled(WithTheme(Themed(FauxControl)))
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    prefix="$"
                    size="large"
                    suffix="cm"
                  >
                    <WithTheme(Themed(FauxControl))
                      className="emotion-4"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "000",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      iconEnd={<IconBackspace />}
                      iconStart={<IconCloud />}
                      prefix="$"
                      size="large"
                      suffix="cm"
                    >
                      <Themed(FauxControl)
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        iconEnd={<IconBackspace />}
                        iconStart={<IconCloud />}
                        prefix="$"
                        size="large"
                        suffix="cm"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <FauxControl
                              className="emotion-4"
                              control={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              prefix="$"
                              size="large"
                              suffix="cm"
                            >
                              <Styled(div)
                                className="emotion-4"
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <IconCloud
                                    key="iconStart"
                                    size="1.5em"
                                  >
                                    <Icon
                                      rtl={false}
                                      size="1.5em"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="1.5em"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-36"
                                          focusable="false"
                                          role="img"
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <path
                                              d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconCloud>
                                  <Styled(span)
                                    iconEnd={<IconBackspace />}
                                    iconStart={<IconCloud />}
                                    key="prefix"
                                    size="large"
                                  >
                                    <span
                                      className="emotion-48"
                                      size="large"
                                    >
                                      $
                                    </span>
                                  </Styled(span)>
                                  <Styled(input)
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": undefined,
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "displayName": "Styled(input)",
                                        "render": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    controlPropsIn={
                                      Object {
                                        "aria-invalid": undefined,
                                        "aria-required": undefined,
                                        "controlRef": undefined,
                                        "defaultValue": "000",
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": undefined,
                                        "type": "number",
                                      }
                                    }
                                    defaultValue="000"
                                    iconEnd={<IconBackspace />}
                                    iconStart={<IconCloud />}
                                    key="control"
                                    prefix="$"
                                    size="large"
                                    suffix="cm"
                                    type="number"
                                  >
                                    <Styled(input)
                                      className="emotion-28"
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      defaultValue="000"
                                      iconEnd={<IconBackspace />}
                                      iconStart={<IconCloud />}
                                      prefix="$"
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                    >
                                      <input
                                        className="emotion-27"
                                        defaultValue="000"
                                        prefix="$"
                                        size="large"
                                        type="number"
                                      />
                                    </Styled(input)>
                                  </Styled(input)>
                                  <Styled(span)
                                    iconEnd={<IconBackspace />}
                                    iconStart={<IconCloud />}
                                    key="suffix"
                                    size="large"
                                  >
                                    <span
                                      className="emotion-37"
                                      size="large"
                                    >
                                      cm
                                    </span>
                                  </Styled(span)>
                                  <IconBackspace
                                    key="iconEnd"
                                    size="1.5em"
                                  >
                                    <Icon
                                      rtl={true}
                                      size="1.5em"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={true}
                                        size="1.5em"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-140"
                                          focusable="false"
                                          role="img"
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <path
                                              d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconBackspace>
                                  <Styled(div)>
                                    <div
                                      className="emotion-2"
                                    />
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </FauxControl>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(FauxControl)>
                    </WithTheme(Themed(FauxControl))>
                  </Styled(WithTheme(Themed(FauxControl)))>
                </TextInput>
                <TextInput
                  defaultValue="000"
                  size="large"
                  suffix="cm"
                  type="number"
                  variant="danger"
                >
                  <Styled(WithTheme(Themed(FauxControl)))
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    size="large"
                    suffix="cm"
                    variant="danger"
                  >
                    <WithTheme(Themed(FauxControl))
                      className="emotion-74"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "000",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      size="large"
                      suffix="cm"
                      variant="danger"
                    >
                      <Themed(FauxControl)
                        className="emotion-74"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        size="large"
                        suffix="cm"
                        variant="danger"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <FauxControl
                              className="emotion-74"
                              control={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              size="large"
                              suffix="cm"
                              variant="danger"
                            >
                              <Styled(div)
                                className="emotion-74"
                                variant="danger"
                              >
                                <div
                                  className="emotion-73"
                                >
                                  <Styled(input)
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": undefined,
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "displayName": "Styled(input)",
                                        "render": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    controlPropsIn={
                                      Object {
                                        "aria-invalid": undefined,
                                        "aria-required": undefined,
                                        "controlRef": undefined,
                                        "defaultValue": "000",
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": undefined,
                                        "type": "number",
                                      }
                                    }
                                    defaultValue="000"
                                    key="control"
                                    size="large"
                                    suffix="cm"
                                    type="number"
                                    variant="danger"
                                  >
                                    <Styled(input)
                                      className="emotion-160"
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      defaultValue="000"
                                      size="large"
                                      suffix="cm"
                                      type="number"
                                      variant="danger"
                                    >
                                      <input
                                        className="emotion-159"
                                        defaultValue="000"
                                        size="large"
                                        type="number"
                                      />
                                    </Styled(input)>
                                  </Styled(input)>
                                  <Styled(span)
                                    key="suffix"
                                    size="large"
                                    variant="danger"
                                  >
                                    <span
                                      className="emotion-37"
                                      size="large"
                                    >
                                      cm
                                    </span>
                                  </Styled(span)>
                                  <IconDanger
                                    key="iconEnd"
                                    size="1.5em"
                                  >
                                    <Icon
                                      rtl={false}
                                      size="1.5em"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="1.5em"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-36"
                                          focusable="false"
                                          role="img"
                                          size="1.5em"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <path
                                              d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconDanger>
                                  <Styled(div)
                                    variant="danger"
                                  >
                                    <div
                                      className="emotion-72"
                                    />
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </FauxControl>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(FauxControl)>
                    </WithTheme(Themed(FauxControl))>
                  </Styled(WithTheme(Themed(FauxControl)))>
                </TextInput>
                <TextInput
                  defaultValue="000"
                  iconEnd={<IconBackspace />}
                  iconStart={<IconCloud />}
                  prefix="$"
                  size="small"
                  suffix="cm"
                  type="number"
                >
                  <Styled(WithTheme(Themed(FauxControl)))
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "000",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "number",
                      }
                    }
                    iconEnd={<IconBackspace />}
                    iconStart={<IconCloud />}
                    prefix="$"
                    size="small"
                    suffix="cm"
                  >
                    <WithTheme(Themed(FauxControl))
                      className="emotion-4"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "000",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      iconEnd={<IconBackspace />}
                      iconStart={<IconCloud />}
                      prefix="$"
                      size="small"
                      suffix="cm"
                    >
                      <Themed(FauxControl)
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "000",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "number",
                          }
                        }
                        iconEnd={<IconBackspace />}
                        iconStart={<IconCloud />}
                        prefix="$"
                        size="small"
                        suffix="cm"
                      >
                        <ThemeProvider>
                          <ThemeProvider>
                            <FauxControl
                              className="emotion-4"
                              control={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlProps={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "000",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              iconEnd={<IconBackspace />}
                              iconStart={<IconCloud />}
                              prefix="$"
                              size="small"
                              suffix="cm"
                            >
                              <Styled(div)
                                className="emotion-4"
                              >
                                <div
                                  className="emotion-3"
                                >
                                  <IconCloud
                                    key="iconStart"
                                    size="medium"
                                  >
                                    <Icon
                                      rtl={false}
                                      size="medium"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={false}
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-78"
                                          focusable="false"
                                          role="img"
                                          size="medium"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <path
                                              d="M19.35 10.04A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 0 0 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconCloud>
                                  <Styled(span)
                                    iconEnd={<IconBackspace />}
                                    iconStart={<IconCloud />}
                                    key="prefix"
                                    size="small"
                                  >
                                    <span
                                      className="emotion-82"
                                      size="small"
                                    >
                                      $
                                    </span>
                                  </Styled(span)>
                                  <Styled(input)
                                    as={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "input",
                                        "__emotion_forwardProp": undefined,
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "displayName": "Styled(input)",
                                        "render": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    controlPropsIn={
                                      Object {
                                        "aria-invalid": undefined,
                                        "aria-required": undefined,
                                        "controlRef": undefined,
                                        "defaultValue": "000",
                                        "disabled": undefined,
                                        "readOnly": undefined,
                                        "required": undefined,
                                        "type": "number",
                                      }
                                    }
                                    defaultValue="000"
                                    iconEnd={<IconBackspace />}
                                    iconStart={<IconCloud />}
                                    key="control"
                                    prefix="$"
                                    size="small"
                                    suffix="cm"
                                    type="number"
                                  >
                                    <Styled(input)
                                      className="emotion-81"
                                      controlPropsIn={
                                        Object {
                                          "aria-invalid": undefined,
                                          "aria-required": undefined,
                                          "controlRef": undefined,
                                          "defaultValue": "000",
                                          "disabled": undefined,
                                          "readOnly": undefined,
                                          "required": undefined,
                                          "type": "number",
                                        }
                                      }
                                      defaultValue="000"
                                      iconEnd={<IconBackspace />}
                                      iconStart={<IconCloud />}
                                      prefix="$"
                                      size="small"
                                      suffix="cm"
                                      type="number"
                                    >
                                      <input
                                        className="emotion-80"
                                        defaultValue="000"
                                        prefix="$"
                                        size="small"
                                        type="number"
                                      />
                                    </Styled(input)>
                                  </Styled(input)>
                                  <Styled(span)
                                    iconEnd={<IconBackspace />}
                                    iconStart={<IconCloud />}
                                    key="suffix"
                                    size="small"
                                  >
                                    <span
                                      className="emotion-79"
                                      size="small"
                                    >
                                      cm
                                    </span>
                                  </Styled(span)>
                                  <IconBackspace
                                    key="iconEnd"
                                    size="medium"
                                  >
                                    <Icon
                                      rtl={true}
                                      size="medium"
                                    >
                                      <Styled(svg)
                                        aria-hidden={true}
                                        focusable="false"
                                        role="img"
                                        rtl={true}
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="emotion-174"
                                          focusable="false"
                                          role="img"
                                          size="medium"
                                          viewBox="0 0 24 24"
                                        >
                                          <g>
                                            <path
                                              d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                            />
                                          </g>
                                        </svg>
                                      </Styled(svg)>
                                    </Icon>
                                  </IconBackspace>
                                  <Styled(div)>
                                    <div
                                      className="emotion-2"
                                    />
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </FauxControl>
                          </ThemeProvider>
                        </ThemeProvider>
                      </Themed(FauxControl)>
                    </WithTheme(Themed(FauxControl))>
                  </Styled(WithTheme(Themed(FauxControl)))>
                </TextInput>
              </div>
            </Styled(div)>
          </DemoLayout>
        </ThemeProvider>
      </ThemeProvider>
    </div>
  </div>
</KitchenSink>
`;

exports[`TextInput demo examples Snapshots: next-to-button 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-23 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-23::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-23::-ms-clear {
  display: none;
}

.emotion-23:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-22 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-22[type="search"] {
  -webkit-appearance: none;
}

.emotion-22[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-22::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-22::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-22:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-22::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-22::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-22:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-22::-ms-clear {
  display: none;
}

.emotion-22:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-12 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-12::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-12::-ms-clear {
  display: none;
}

.emotion-12:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-11 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.2857142857142856em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-11[type="search"] {
  -webkit-appearance: none;
}

.emotion-11[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-11::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-11::-ms-clear {
  display: none;
}

.emotion-11:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-33 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.7142857142857144em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-33[type="search"] {
  -webkit-appearance: none;
}

.emotion-33[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-33::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-33::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-33:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-33::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-33::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-33:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-33::-ms-clear {
  display: none;
}

.emotion-33:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-32 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-32 *,
.emotion-32 *::before,
.emotion-32 *::after {
  box-sizing: inherit;
}

.emotion-32:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-32:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-32:focus:active,
.emotion-32:focus:hover {
  border-color: #c8d1e0;
}

.emotion-32:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-32::-moz-focus-inner {
  border: 0;
}

.emotion-32 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-32 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-32 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-32 [role="img"]:only-child {
  margin: 0;
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-30 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-30:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-30:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-45 > * {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-45 > * > div {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-44[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-44 > * {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-44 > * > div {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-10 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-10 *,
.emotion-10 *::before,
.emotion-10 *::after {
  box-sizing: inherit;
}

.emotion-10:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-10:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-10:focus:active,
.emotion-10:focus:hover {
  border-color: #c8d1e0;
}

.emotion-10:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-10::-moz-focus-inner {
  border: 0;
}

.emotion-10 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-10 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-10 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-10 [role="img"]:only-child {
  margin: 0;
}

.emotion-8 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.emotion-21 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-21 *,
.emotion-21 *::before,
.emotion-21 *::after {
  box-sizing: inherit;
}

.emotion-21:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-21:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-21:focus:active,
.emotion-21:focus:hover {
  border-color: #c8d1e0;
}

.emotion-21:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-21::-moz-focus-inner {
  border: 0;
}

.emotion-21 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-21 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-21 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-21 [role="img"]:only-child {
  margin: 0;
}

.emotion-19 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-43 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25em;
  margin: 0;
  min-width: 3.25em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-43 *,
.emotion-43 *::before,
.emotion-43 *::after {
  box-sizing: inherit;
}

.emotion-43:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-43:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-43:focus:active,
.emotion-43:focus:hover {
  border-color: #c8d1e0;
}

.emotion-43:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-43::-moz-focus-inner {
  border: 0;
}

.emotion-43 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-43 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-43 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-43 [role="img"]:only-child {
  margin: 0;
}

.emotion-41 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 3.7142857142857144em;
}

.emotion-41:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-41:last-child {
  padding-right: 0.5714285714285714em;
}

<Styled(DemoLayout)>
  <DemoLayout
    className="emotion-45"
  >
    <Styled(div)
      className="emotion-45"
      marginBottom="1rem"
    >
      <div
        className="emotion-44"
      >
        <div>
          <TextInput
            defaultValue="Small"
            size="small"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="small"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="small"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="small"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Small",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="small"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Small",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Small"
                              key="control"
                              size="small"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-1"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "Small",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="Small"
                                size="small"
                                type="text"
                              >
                                <input
                                  className="emotion-0"
                                  defaultValue="Small"
                                  size="small"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="small"
          >
            <Button
              forwardedRef={null}
              size="small"
            >
              <Styled(button)
                size="small"
                text="Small"
              >
                <button
                  className="emotion-10"
                  size="small"
                >
                  <Styled(span)>
                    <span
                      className="emotion-9"
                    >
                      <Styled(span)
                        size="small"
                      >
                        <span
                          className="emotion-8"
                          size="small"
                        >
                          Small
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
        <div>
          <TextInput
            defaultValue="Medium"
            size="medium"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="medium"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="medium"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="medium"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Medium",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="medium"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Medium",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Medium"
                              key="control"
                              size="medium"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-12"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "Medium",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="Medium"
                                size="medium"
                                type="text"
                              >
                                <input
                                  className="emotion-11"
                                  defaultValue="Medium"
                                  size="medium"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="medium"
          >
            <Button
              forwardedRef={null}
              size="medium"
            >
              <Styled(button)
                size="medium"
                text="Medium"
              >
                <button
                  className="emotion-21"
                  size="medium"
                >
                  <Styled(span)>
                    <span
                      className="emotion-9"
                    >
                      <Styled(span)
                        size="medium"
                      >
                        <span
                          className="emotion-19"
                          size="medium"
                        >
                          Medium
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
        <div>
          <TextInput
            defaultValue="Large"
            size="large"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Large",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Large",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Large"
                              key="control"
                              size="large"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-23"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "Large",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="Large"
                                size="large"
                                type="text"
                              >
                                <input
                                  className="emotion-22"
                                  defaultValue="Large"
                                  size="large"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="large"
          >
            <Button
              forwardedRef={null}
              size="large"
            >
              <Styled(button)
                size="large"
                text="Large"
              >
                <button
                  className="emotion-32"
                  size="large"
                >
                  <Styled(span)>
                    <span
                      className="emotion-9"
                    >
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-30"
                          size="large"
                        >
                          Large
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
        <div>
          <TextInput
            defaultValue="Jumbo"
            size="jumbo"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="jumbo"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="jumbo"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="jumbo"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Jumbo",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="jumbo"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Jumbo",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Jumbo"
                              key="control"
                              size="jumbo"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-23"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "Jumbo",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="Jumbo"
                                size="jumbo"
                                type="text"
                              >
                                <input
                                  className="emotion-33"
                                  defaultValue="Jumbo"
                                  size="jumbo"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="jumbo"
          >
            <Button
              forwardedRef={null}
              size="jumbo"
            >
              <Styled(button)
                size="jumbo"
                text="Jumbo"
              >
                <button
                  className="emotion-43"
                  size="jumbo"
                >
                  <Styled(span)>
                    <span
                      className="emotion-9"
                    >
                      <Styled(span)
                        size="jumbo"
                      >
                        <span
                          className="emotion-41"
                          size="jumbo"
                        >
                          Jumbo
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
      </div>
    </Styled(div)>
  </DemoLayout>
</Styled(DemoLayout)>
`;

exports[`TextInput demo examples Snapshots: placeholder 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  placeholder="12345-123"
  size="large"
  type="text"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "input",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(input)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "controlRef": undefined,
        "disabled": undefined,
        "placeholder": "12345-123",
        "readOnly": undefined,
        "required": undefined,
        "type": "text",
      }
    }
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "input",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(input)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "controlRef": undefined,
          "disabled": undefined,
          "placeholder": "12345-123",
          "readOnly": undefined,
          "required": undefined,
          "type": "text",
        }
      }
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "input",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(input)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "disabled": undefined,
            "placeholder": "12345-123",
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "placeholder": "12345-123",
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "placeholder": "12345-123",
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    key="control"
                    placeholder="12345-123"
                    size="large"
                    type="text"
                  >
                    <Styled(input)
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "placeholder": "12345-123",
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      placeholder="12345-123"
                      size="large"
                      type="text"
                    >
                      <input
                        className="emotion-0"
                        placeholder="12345-123"
                        size="large"
                        type="text"
                      />
                    </Styled(input)>
                  </Styled(input)>
                  <Styled(div)>
                    <div
                      className="emotion-2"
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextInput>
`;

exports[`TextInput demo examples Snapshots: prefix-and-suffix 1`] = `
.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-5 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-18[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-2 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-2::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-clear {
  display: none;
}

.emotion-2:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-10 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-9 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-9[type="search"] {
  -webkit-appearance: none;
}

.emotion-9[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-9::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-clear {
  display: none;
}

.emotion-9:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0.2857142857142857em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
}

.emotion-11 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  font-size: 0.875em;
  margin-left: 0.2857142857142857em;
  margin-right: 1.1428571428571428em;
  white-space: nowrap;
  display: inline-block;
  max-width: 8em;
  overflow: hidden;
  text-overflow: ellipsis;
  word-wrap: normal;
}

<Component>
  <DemoLayout>
    <Styled(div)
      marginBottom="1rem"
    >
      <div
        className="emotion-18"
      >
        <TextInput
          prefix="$"
          size="large"
          type="number"
        >
          <Styled(WithTheme(Themed(FauxControl)))
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            prefix="$"
            size="large"
          >
            <WithTheme(Themed(FauxControl))
              className="emotion-5"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              prefix="$"
              size="large"
            >
              <Themed(FauxControl)
                className="emotion-5"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                prefix="$"
                size="large"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <FauxControl
                      className="emotion-5"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      prefix="$"
                      size="large"
                    >
                      <Styled(div)
                        className="emotion-5"
                      >
                        <div
                          className="emotion-4"
                        >
                          <Styled(span)
                            key="prefix"
                            size="large"
                          >
                            <span
                              className="emotion-0"
                              size="large"
                            >
                              $
                            </span>
                          </Styled(span)>
                          <Styled(input)
                            as={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "input",
                                "__emotion_forwardProp": undefined,
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "displayName": "Styled(input)",
                                "render": [Function],
                                "withComponent": [Function],
                              }
                            }
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "number",
                              }
                            }
                            key="control"
                            prefix="$"
                            size="large"
                            type="number"
                          >
                            <Styled(input)
                              className="emotion-2"
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              prefix="$"
                              size="large"
                              type="number"
                            >
                              <input
                                className="emotion-1"
                                prefix="$"
                                size="large"
                                type="number"
                              />
                            </Styled(input)>
                          </Styled(input)>
                          <Styled(div)>
                            <div
                              className="emotion-3"
                            />
                          </Styled(div)>
                        </div>
                      </Styled(div)>
                    </FauxControl>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(FauxControl)>
            </WithTheme(Themed(FauxControl))>
          </Styled(WithTheme(Themed(FauxControl)))>
        </TextInput>
        <TextInput
          size="large"
          suffix="cm"
          type="number"
        >
          <Styled(WithTheme(Themed(FauxControl)))
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "number",
              }
            }
            size="large"
            suffix="cm"
          >
            <WithTheme(Themed(FauxControl))
              className="emotion-5"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "number",
                }
              }
              size="large"
              suffix="cm"
            >
              <Themed(FauxControl)
                className="emotion-5"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "number",
                  }
                }
                size="large"
                suffix="cm"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <FauxControl
                      className="emotion-5"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "input",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(input)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "number",
                        }
                      }
                      size="large"
                      suffix="cm"
                    >
                      <Styled(div)
                        className="emotion-5"
                      >
                        <div
                          className="emotion-4"
                        >
                          <Styled(input)
                            as={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "input",
                                "__emotion_forwardProp": undefined,
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "displayName": "Styled(input)",
                                "render": [Function],
                                "withComponent": [Function],
                              }
                            }
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "number",
                              }
                            }
                            key="control"
                            size="large"
                            suffix="cm"
                            type="number"
                          >
                            <Styled(input)
                              className="emotion-10"
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "number",
                                }
                              }
                              size="large"
                              suffix="cm"
                              type="number"
                            >
                              <input
                                className="emotion-9"
                                size="large"
                                type="number"
                              />
                            </Styled(input)>
                          </Styled(input)>
                          <Styled(span)
                            key="suffix"
                            size="large"
                          >
                            <span
                              className="emotion-11"
                              size="large"
                            >
                              cm
                            </span>
                          </Styled(span)>
                          <Styled(div)>
                            <div
                              className="emotion-3"
                            />
                          </Styled(div)>
                        </div>
                      </Styled(div)>
                    </FauxControl>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(FauxControl)>
            </WithTheme(Themed(FauxControl))>
          </Styled(WithTheme(Themed(FauxControl)))>
        </TextInput>
      </div>
    </Styled(div)>
  </DemoLayout>
</Component>
`;

exports[`TextInput demo examples Snapshots: read-only 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-2 {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-1 {
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<TextInput
  defaultValue="Hello World"
  readOnly={true}
  size="large"
  type="text"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "input",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(input)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "controlRef": undefined,
        "defaultValue": "Hello World",
        "disabled": undefined,
        "readOnly": true,
        "required": undefined,
        "type": "text",
      }
    }
    readOnly={true}
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "input",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(input)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "controlRef": undefined,
          "defaultValue": "Hello World",
          "disabled": undefined,
          "readOnly": true,
          "required": undefined,
          "type": "text",
        }
      }
      readOnly={true}
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "input",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(input)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Hello World",
            "disabled": undefined,
            "readOnly": true,
            "required": undefined,
            "type": "text",
          }
        }
        readOnly={true}
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Hello World",
                  "disabled": undefined,
                  "readOnly": true,
                  "required": undefined,
                  "type": "text",
                }
              }
              readOnly={true}
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Hello World",
                        "disabled": undefined,
                        "readOnly": true,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    defaultValue="Hello World"
                    key="control"
                    readOnly={true}
                    size="large"
                    type="text"
                  >
                    <Styled(input)
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Hello World",
                          "disabled": undefined,
                          "readOnly": true,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Hello World"
                      readOnly={true}
                      size="large"
                      type="text"
                    >
                      <input
                        className="emotion-0"
                        defaultValue="Hello World"
                        readOnly={true}
                        size="large"
                        type="text"
                      />
                    </Styled(input)>
                  </Styled(input)>
                  <Styled(div)
                    readOnly={true}
                  >
                    <div
                      className="emotion-2"
                      readOnly={true}
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextInput>
`;

exports[`TextInput demo examples Snapshots: required 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  required={true}
  size="large"
  type="text"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "input",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(input)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": true,
        "controlRef": undefined,
        "disabled": undefined,
        "readOnly": undefined,
        "required": true,
        "type": "text",
      }
    }
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "input",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(input)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": true,
          "controlRef": undefined,
          "disabled": undefined,
          "readOnly": undefined,
          "required": true,
          "type": "text",
        }
      }
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "input",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(input)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": true,
            "controlRef": undefined,
            "disabled": undefined,
            "readOnly": undefined,
            "required": true,
            "type": "text",
          }
        }
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": true,
                  "controlRef": undefined,
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": true,
                  "type": "text",
                }
              }
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    aria-required={true}
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "controlRef": undefined,
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": true,
                        "type": "text",
                      }
                    }
                    key="control"
                    required={true}
                    size="large"
                    type="text"
                  >
                    <Styled(input)
                      aria-required={true}
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": true,
                          "controlRef": undefined,
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": true,
                          "type": "text",
                        }
                      }
                      required={true}
                      size="large"
                      type="text"
                    >
                      <input
                        aria-required={true}
                        className="emotion-0"
                        required={true}
                        size="large"
                        type="text"
                      />
                    </Styled(input)>
                  </Styled(input)>
                  <Styled(div)>
                    <div
                      className="emotion-2"
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextInput>
`;

exports[`TextInput demo examples Snapshots: rtl 1`] = `
.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-5 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-27[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-23 [role="img"] {
  color: #2a854e;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-23 [role="img"]:last-of-type {
  color: #2a854e;
}

.emotion-22 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:hover > div:last-child {
  border-color: #3ba164;
}

.emotion-22:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-22:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-22 [role="img"] {
  color: #2a854e;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-22 [role="img"]:last-of-type {
  color: #2a854e;
}

.emotion-20 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-21 {
  background-color: #ffffff;
  border-color: #2a854e;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-10 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-9 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-9[type="search"] {
  -webkit-appearance: none;
}

.emotion-9[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-9::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-clear {
  display: none;
}

.emotion-9:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-2::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-clear {
  display: none;
}

.emotion-2:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-1[type="search"] {
  -webkit-appearance: none;
}

.emotion-1[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  -webkit-transform: scaleX(-1);
  -ms-transform: scaleX(-1);
  transform: scaleX(-1);
  width: 1.5em;
}

.emotion-19 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-19::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::-ms-clear {
  display: none;
}

.emotion-19:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-18 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0;
  padding-right: 1.1428571428571428em;
}

.emotion-18[type="search"] {
  -webkit-appearance: none;
}

.emotion-18[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-18::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-ms-clear {
  display: none;
}

.emotion-18:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <DemoLayout>
        <Styled(div)
          marginBottom="1rem"
        >
          <div
            className="emotion-27"
          >
            <TextInput
              defaultValue="مرحبا بالعالم"
              iconStart={<IconBackspace />}
              size="large"
              type="text"
            >
              <Styled(WithTheme(Themed(FauxControl)))
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "مرحبا بالعالم",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                iconStart={<IconBackspace />}
                size="large"
              >
                <WithTheme(Themed(FauxControl))
                  className="emotion-5"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "مرحبا بالعالم",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  iconStart={<IconBackspace />}
                  size="large"
                >
                  <Themed(FauxControl)
                    className="emotion-5"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "مرحبا بالعالم",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    iconStart={<IconBackspace />}
                    size="large"
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <FauxControl
                          className="emotion-5"
                          control={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "مرحبا بالعالم",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          iconStart={<IconBackspace />}
                          size="large"
                        >
                          <Styled(div)
                            className="emotion-5"
                          >
                            <div
                              className="emotion-4"
                            >
                              <IconBackspace
                                key="iconStart"
                                size="1.5em"
                              >
                                <Icon
                                  rtl={true}
                                  size="1.5em"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={true}
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-0"
                                      focusable="false"
                                      role="img"
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconBackspace>
                              <Styled(input)
                                as={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "__emotion_base": "input",
                                    "__emotion_forwardProp": undefined,
                                    "__emotion_real": [Circular],
                                    "__emotion_styles": Array [
                                      [Function],
                                    ],
                                    "defaultProps": undefined,
                                    "displayName": "Styled(input)",
                                    "render": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "مرحبا بالعالم",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="مرحبا بالعالم"
                                iconStart={<IconBackspace />}
                                key="control"
                                size="large"
                                type="text"
                              >
                                <Styled(input)
                                  className="emotion-2"
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "مرحبا بالعالم",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  defaultValue="مرحبا بالعالم"
                                  iconStart={<IconBackspace />}
                                  size="large"
                                  type="text"
                                >
                                  <input
                                    className="emotion-1"
                                    defaultValue="مرحبا بالعالم"
                                    size="large"
                                    type="text"
                                  />
                                </Styled(input)>
                              </Styled(input)>
                              <Styled(div)>
                                <div
                                  className="emotion-3"
                                />
                              </Styled(div)>
                            </div>
                          </Styled(div)>
                        </FauxControl>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(FauxControl)>
                </WithTheme(Themed(FauxControl))>
              </Styled(WithTheme(Themed(FauxControl)))>
            </TextInput>
            <TextInput
              defaultValue="مرحبا بالعالم"
              iconEnd={<IconBackspace />}
              size="large"
              type="text"
            >
              <Styled(WithTheme(Themed(FauxControl)))
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "مرحبا بالعالم",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                iconEnd={<IconBackspace />}
                size="large"
              >
                <WithTheme(Themed(FauxControl))
                  className="emotion-5"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "مرحبا بالعالم",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  iconEnd={<IconBackspace />}
                  size="large"
                >
                  <Themed(FauxControl)
                    className="emotion-5"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "مرحبا بالعالم",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    iconEnd={<IconBackspace />}
                    size="large"
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <FauxControl
                          className="emotion-5"
                          control={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "مرحبا بالعالم",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          iconEnd={<IconBackspace />}
                          size="large"
                        >
                          <Styled(div)
                            className="emotion-5"
                          >
                            <div
                              className="emotion-4"
                            >
                              <Styled(input)
                                as={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "__emotion_base": "input",
                                    "__emotion_forwardProp": undefined,
                                    "__emotion_real": [Circular],
                                    "__emotion_styles": Array [
                                      [Function],
                                    ],
                                    "defaultProps": undefined,
                                    "displayName": "Styled(input)",
                                    "render": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "مرحبا بالعالم",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="مرحبا بالعالم"
                                iconEnd={<IconBackspace />}
                                key="control"
                                size="large"
                                type="text"
                              >
                                <Styled(input)
                                  className="emotion-10"
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "مرحبا بالعالم",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  defaultValue="مرحبا بالعالم"
                                  iconEnd={<IconBackspace />}
                                  size="large"
                                  type="text"
                                >
                                  <input
                                    className="emotion-9"
                                    defaultValue="مرحبا بالعالم"
                                    size="large"
                                    type="text"
                                  />
                                </Styled(input)>
                              </Styled(input)>
                              <IconBackspace
                                key="iconEnd"
                                size="1.5em"
                              >
                                <Icon
                                  rtl={true}
                                  size="1.5em"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={true}
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-0"
                                      focusable="false"
                                      role="img"
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconBackspace>
                              <Styled(div)>
                                <div
                                  className="emotion-3"
                                />
                              </Styled(div)>
                            </div>
                          </Styled(div)>
                        </FauxControl>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(FauxControl)>
                </WithTheme(Themed(FauxControl))>
              </Styled(WithTheme(Themed(FauxControl)))>
            </TextInput>
            <TextInput
              defaultValue="مرحبا بالعالم"
              size="large"
              type="text"
              variant="success"
            >
              <Styled(WithTheme(Themed(FauxControl)))
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "مرحبا بالعالم",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
                variant="success"
              >
                <WithTheme(Themed(FauxControl))
                  className="emotion-23"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "مرحبا بالعالم",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                  variant="success"
                >
                  <Themed(FauxControl)
                    className="emotion-23"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "مرحبا بالعالم",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                    variant="success"
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <FauxControl
                          className="emotion-23"
                          control={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlProps={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "مرحبا بالعالم",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          size="large"
                          variant="success"
                        >
                          <Styled(div)
                            className="emotion-23"
                            variant="success"
                          >
                            <div
                              className="emotion-22"
                            >
                              <Styled(input)
                                as={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "__emotion_base": "input",
                                    "__emotion_forwardProp": undefined,
                                    "__emotion_real": [Circular],
                                    "__emotion_styles": Array [
                                      [Function],
                                    ],
                                    "defaultProps": undefined,
                                    "displayName": "Styled(input)",
                                    "render": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "مرحبا بالعالم",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="مرحبا بالعالم"
                                key="control"
                                size="large"
                                type="text"
                                variant="success"
                              >
                                <Styled(input)
                                  className="emotion-19"
                                  controlPropsIn={
                                    Object {
                                      "aria-invalid": undefined,
                                      "aria-required": undefined,
                                      "controlRef": undefined,
                                      "defaultValue": "مرحبا بالعالم",
                                      "disabled": undefined,
                                      "readOnly": undefined,
                                      "required": undefined,
                                      "type": "text",
                                    }
                                  }
                                  defaultValue="مرحبا بالعالم"
                                  size="large"
                                  type="text"
                                  variant="success"
                                >
                                  <input
                                    className="emotion-18"
                                    defaultValue="مرحبا بالعالم"
                                    size="large"
                                    type="text"
                                  />
                                </Styled(input)>
                              </Styled(input)>
                              <IconSuccess
                                key="iconEnd"
                                size="1.5em"
                              >
                                <Icon
                                  rtl={false}
                                  size="1.5em"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="1.5em"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-20"
                                      focusable="false"
                                      role="img"
                                      size="1.5em"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconSuccess>
                              <Styled(div)
                                variant="success"
                              >
                                <div
                                  className="emotion-21"
                                />
                              </Styled(div)>
                            </div>
                          </Styled(div)>
                        </FauxControl>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(FauxControl)>
                </WithTheme(Themed(FauxControl))>
              </Styled(WithTheme(Themed(FauxControl)))>
            </TextInput>
          </div>
        </Styled(div)>
      </DemoLayout>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`TextInput demo examples Snapshots: size 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-17 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-17::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-clear {
  display: none;
}

.emotion-17:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-16 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-16[type="search"] {
  -webkit-appearance: none;
}

.emotion-16[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-16::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-clear {
  display: none;
}

.emotion-16:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-32[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-9 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-9::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-clear {
  display: none;
}

.emotion-9:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-8 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.2857142857142856em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-8[type="search"] {
  -webkit-appearance: none;
}

.emotion-8[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-8::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-clear {
  display: none;
}

.emotion-8:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-24 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.7142857142857144em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-24[type="search"] {
  -webkit-appearance: none;
}

.emotion-24[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-24::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::-ms-clear {
  display: none;
}

.emotion-24:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-32"
    >
      <TextInput
        defaultValue="Small"
        size="small"
        type="text"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "input",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(input)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Small",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="small"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Small",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="small"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="small"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Small",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="small"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "Small",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          defaultValue="Small"
                          key="control"
                          size="small"
                          type="text"
                        >
                          <Styled(input)
                            className="emotion-1"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Small",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            defaultValue="Small"
                            size="small"
                            type="text"
                          >
                            <input
                              className="emotion-0"
                              defaultValue="Small"
                              size="small"
                              type="text"
                            />
                          </Styled(input)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextInput>
      <TextInput
        defaultValue="Medium"
        size="medium"
        type="text"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "input",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(input)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Medium",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="medium"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Medium",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="medium"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="medium"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Medium",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="medium"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "Medium",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          defaultValue="Medium"
                          key="control"
                          size="medium"
                          type="text"
                        >
                          <Styled(input)
                            className="emotion-9"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Medium",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            defaultValue="Medium"
                            size="medium"
                            type="text"
                          >
                            <input
                              className="emotion-8"
                              defaultValue="Medium"
                              size="medium"
                              type="text"
                            />
                          </Styled(input)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextInput>
      <TextInput
        defaultValue="Large"
        size="large"
        type="text"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "input",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(input)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Large",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Large",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Large",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "Large",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          defaultValue="Large"
                          key="control"
                          size="large"
                          type="text"
                        >
                          <Styled(input)
                            className="emotion-17"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Large",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            defaultValue="Large"
                            size="large"
                            type="text"
                          >
                            <input
                              className="emotion-16"
                              defaultValue="Large"
                              size="large"
                              type="text"
                            />
                          </Styled(input)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextInput>
      <TextInput
        defaultValue="Jumbo"
        size="jumbo"
        type="text"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "input",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(input)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="jumbo"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="jumbo"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="jumbo"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Jumbo",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="jumbo"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "Jumbo",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          defaultValue="Jumbo"
                          key="control"
                          size="jumbo"
                          type="text"
                        >
                          <Styled(input)
                            className="emotion-17"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Jumbo",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            defaultValue="Jumbo"
                            size="jumbo"
                            type="text"
                          >
                            <input
                              className="emotion-24"
                              defaultValue="Jumbo"
                              size="jumbo"
                              type="text"
                            />
                          </Styled(input)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextInput>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextInput demo examples Snapshots: uncontrolled 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-3 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextInput
  defaultValue="Hello World"
  size="large"
  type="text"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "input",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(input)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "controlRef": undefined,
        "defaultValue": "Hello World",
        "disabled": undefined,
        "readOnly": undefined,
        "required": undefined,
        "type": "text",
      }
    }
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "input",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(input)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "controlRef": undefined,
          "defaultValue": "Hello World",
          "disabled": undefined,
          "readOnly": undefined,
          "required": undefined,
          "type": "text",
        }
      }
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "input",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(input)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "controlRef": undefined,
            "defaultValue": "Hello World",
            "disabled": undefined,
            "readOnly": undefined,
            "required": undefined,
            "type": "text",
          }
        }
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Hello World",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Hello World",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    defaultValue="Hello World"
                    key="control"
                    size="large"
                    type="text"
                  >
                    <Styled(input)
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "controlRef": undefined,
                          "defaultValue": "Hello World",
                          "disabled": undefined,
                          "readOnly": undefined,
                          "required": undefined,
                          "type": "text",
                        }
                      }
                      defaultValue="Hello World"
                      size="large"
                      type="text"
                    >
                      <input
                        className="emotion-0"
                        defaultValue="Hello World"
                        size="large"
                        type="text"
                      />
                    </Styled(input)>
                  </Styled(input)>
                  <Styled(div)>
                    <div
                      className="emotion-2"
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextInput>
`;

exports[`TextInput demo examples Snapshots: variants 1`] = `
.emotion-27[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 [role="img"] {
  color: #2a854e;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-5 [role="img"]:last-of-type {
  color: #2a854e;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover > div:last-child {
  border-color: #3ba164;
}

.emotion-4:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-4:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-4 [role="img"] {
  color: #2a854e;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-4 [role="img"]:last-of-type {
  color: #2a854e;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-0[type="search"] {
  -webkit-appearance: none;
}

.emotion-0[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-2 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-3 {
  background-color: #ffffff;
  border-color: #2a854e;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-14 [role="img"] {
  color: #ad5f00;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-14 [role="img"]:last-of-type {
  color: #ad5f00;
}

.emotion-13 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-13 *,
.emotion-13 *::before,
.emotion-13 *::after {
  box-sizing: inherit;
}

.emotion-13:hover > div:last-child {
  border-color: #cf7911;
}

.emotion-13:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-13:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-13 [role="img"] {
  color: #ad5f00;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-13 [role="img"]:last-of-type {
  color: #ad5f00;
}

.emotion-10 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-10::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-10::-ms-clear {
  display: none;
}

.emotion-10:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-9 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-9[type="search"] {
  -webkit-appearance: none;
}

.emotion-9[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-9::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-clear {
  display: none;
}

.emotion-9:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-12 {
  background-color: #ffffff;
  border-color: #ad5f00;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-23 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-23 [role="img"] {
  color: #de1b1b;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-23 [role="img"]:last-of-type {
  color: #de1b1b;
}

.emotion-22 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:hover > div:last-child {
  border-color: #f55353;
}

.emotion-22:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-22:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-22 [role="img"] {
  color: #de1b1b;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-22 [role="img"]:last-of-type {
  color: #de1b1b;
}

.emotion-19 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-19::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-19::-ms-clear {
  display: none;
}

.emotion-19:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-18 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-18[type="search"] {
  -webkit-appearance: none;
}

.emotion-18[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-18::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-18::-ms-clear {
  display: none;
}

.emotion-18:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-21 {
  background-color: #ffffff;
  border-color: #de1b1b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-27"
    >
      <TextInput
        defaultValue="Success"
        size="large"
        type="text"
        variant="success"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "input",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(input)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Success",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
          variant="success"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-5"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Success",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
            variant="success"
          >
            <Themed(FauxControl)
              className="emotion-5"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Success",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
              variant="success"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-5"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Success",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                    variant="success"
                  >
                    <Styled(div)
                      className="emotion-5"
                      variant="success"
                    >
                      <div
                        className="emotion-4"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "Success",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          defaultValue="Success"
                          key="control"
                          size="large"
                          type="text"
                          variant="success"
                        >
                          <Styled(input)
                            className="emotion-1"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Success",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            defaultValue="Success"
                            size="large"
                            type="text"
                            variant="success"
                          >
                            <input
                              className="emotion-0"
                              defaultValue="Success"
                              size="large"
                              type="text"
                            />
                          </Styled(input)>
                        </Styled(input)>
                        <IconSuccess
                          key="iconEnd"
                          size="1.5em"
                        >
                          <Icon
                            rtl={false}
                            size="1.5em"
                          >
                            <Styled(svg)
                              aria-hidden={true}
                              focusable="false"
                              role="img"
                              rtl={false}
                              size="1.5em"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="emotion-2"
                                focusable="false"
                                role="img"
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M12 3c4.968 0 9 4.032 9 9s-4.032 9-9 9-9-4.032-9-9 4.032-9 9-9zm-4.247 8.445L6.5 12.698l3.838 3.838 7.198-7.198-1.253-1.254-5.945 5.945-2.585-2.585z"
                                  />
                                </g>
                              </svg>
                            </Styled(svg)>
                          </Icon>
                        </IconSuccess>
                        <Styled(div)
                          variant="success"
                        >
                          <div
                            className="emotion-3"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextInput>
      <TextInput
        defaultValue="Warning"
        size="large"
        type="text"
        variant="warning"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "input",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(input)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Warning",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
          variant="warning"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-14"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Warning",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
            variant="warning"
          >
            <Themed(FauxControl)
              className="emotion-14"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Warning",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
              variant="warning"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-14"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Warning",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                    variant="warning"
                  >
                    <Styled(div)
                      className="emotion-14"
                      variant="warning"
                    >
                      <div
                        className="emotion-13"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "Warning",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          defaultValue="Warning"
                          key="control"
                          size="large"
                          type="text"
                          variant="warning"
                        >
                          <Styled(input)
                            className="emotion-10"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Warning",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            defaultValue="Warning"
                            size="large"
                            type="text"
                            variant="warning"
                          >
                            <input
                              className="emotion-9"
                              defaultValue="Warning"
                              size="large"
                              type="text"
                            />
                          </Styled(input)>
                        </Styled(input)>
                        <IconWarning
                          key="iconEnd"
                          size="1.5em"
                        >
                          <Icon
                            rtl={false}
                            size="1.5em"
                          >
                            <Styled(svg)
                              aria-hidden={true}
                              focusable="false"
                              role="img"
                              rtl={false}
                              size="1.5em"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="emotion-2"
                                focusable="false"
                                role="img"
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M13.414 2.718l7.868 7.868c.78.78.78 2.047 0 2.828l-7.868 7.868c-.78.78-2.047.78-2.828 0l-7.868-7.868a2.001 2.001 0 0 1 0-2.828l7.868-7.868c.78-.78 2.047-.78 2.828 0zM12 17a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm1-3.958V8h-2v5.042h2z"
                                  />
                                </g>
                              </svg>
                            </Styled(svg)>
                          </Icon>
                        </IconWarning>
                        <Styled(div)
                          variant="warning"
                        >
                          <div
                            className="emotion-12"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextInput>
      <TextInput
        defaultValue="Danger"
        size="large"
        type="text"
        variant="danger"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "input",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(input)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "controlRef": undefined,
              "defaultValue": "Danger",
              "disabled": undefined,
              "readOnly": undefined,
              "required": undefined,
              "type": "text",
            }
          }
          size="large"
          variant="danger"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-23"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "input",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(input)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "controlRef": undefined,
                "defaultValue": "Danger",
                "disabled": undefined,
                "readOnly": undefined,
                "required": undefined,
                "type": "text",
              }
            }
            size="large"
            variant="danger"
          >
            <Themed(FauxControl)
              className="emotion-23"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Danger",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
              variant="danger"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-23"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "input",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(input)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "controlRef": undefined,
                        "defaultValue": "Danger",
                        "disabled": undefined,
                        "readOnly": undefined,
                        "required": undefined,
                        "type": "text",
                      }
                    }
                    size="large"
                    variant="danger"
                  >
                    <Styled(div)
                      className="emotion-23"
                      variant="danger"
                    >
                      <div
                        className="emotion-22"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "controlRef": undefined,
                              "defaultValue": "Danger",
                              "disabled": undefined,
                              "readOnly": undefined,
                              "required": undefined,
                              "type": "text",
                            }
                          }
                          defaultValue="Danger"
                          key="control"
                          size="large"
                          type="text"
                          variant="danger"
                        >
                          <Styled(input)
                            className="emotion-19"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "controlRef": undefined,
                                "defaultValue": "Danger",
                                "disabled": undefined,
                                "readOnly": undefined,
                                "required": undefined,
                                "type": "text",
                              }
                            }
                            defaultValue="Danger"
                            size="large"
                            type="text"
                            variant="danger"
                          >
                            <input
                              className="emotion-18"
                              defaultValue="Danger"
                              size="large"
                              type="text"
                            />
                          </Styled(input)>
                        </Styled(input)>
                        <IconDanger
                          key="iconEnd"
                          size="1.5em"
                        >
                          <Icon
                            rtl={false}
                            size="1.5em"
                          >
                            <Styled(svg)
                              aria-hidden={true}
                              focusable="false"
                              role="img"
                              rtl={false}
                              size="1.5em"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                aria-hidden={true}
                                className="emotion-2"
                                focusable="false"
                                role="img"
                                size="1.5em"
                                viewBox="0 0 24 24"
                              >
                                <g>
                                  <path
                                    d="M3.94 19.49h16.118a1 1 0 0 0 .866-1.498l-8.06-13.99a.996.996 0 0 0-1.732-.001L3.074 17.993a.998.998 0 0 0 .867 1.499zM12 17a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3.503h-2v-5h2v5z"
                                  />
                                </g>
                              </svg>
                            </Styled(svg)>
                          </Icon>
                        </IconDanger>
                        <Styled(div)
                          variant="danger"
                        >
                          <div
                            className="emotion-21"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextInput>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextInput renders an html size attribute when provided 1`] = `"<div class=\\"css-emotion\\"><input type=\\"text\\" size=\\"1\\" class=\\"css-emotion\\"><div class=\\"css-emotion\\"></div></div>"`;
