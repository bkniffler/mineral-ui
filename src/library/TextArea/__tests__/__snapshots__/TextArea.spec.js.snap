// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextArea demo examples Snapshots: autosize 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-24[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-17 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-17::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-clear {
  display: none;
}

.emotion-17:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-16 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-16::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-clear {
  display: none;
}

.emotion-16:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-24"
    >
      <TextArea
        autoSize={true}
        defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
        size="large"
        spellCheck={false}
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 8,
              "size": "large",
              "spellCheck": false,
            }
          }
          iconEnd={null}
          size="large"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 8,
                "size": "large",
                "spellCheck": false,
              }
            }
            iconEnd={null}
            size="large"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 8,
                  "size": "large",
                  "spellCheck": false,
                }
              }
              iconEnd={null}
              size="large"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": true,
                        "controlRef": [Function],
                        "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": false,
                        "rows": 8,
                        "size": "large",
                        "spellCheck": false,
                      }
                    }
                    iconEnd={null}
                    size="large"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          autoSize={true}
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": true,
                              "controlRef": [Function],
                              "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": false,
                              "rows": 8,
                              "size": "large",
                              "spellCheck": false,
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={false}
                          rows={8}
                          size="large"
                          spellCheck={false}
                        >
                          <Styled(textarea)
                            autoSize={true}
                            className="emotion-1"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": true,
                                "controlRef": [Function],
                                "defaultValue": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus.",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": false,
                                "rows": 8,
                                "size": "large",
                                "spellCheck": false,
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={false}
                            rows={8}
                            size="large"
                            spellCheck={false}
                          >
                            <textarea
                              className="emotion-0"
                              defaultValue="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis. Fusce hendrerit, nunc vitae tempor tempor, urna dolor fringilla eros, non condimentum urna dui id tellus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Pellentesque tempor metus eget ipsum volutpat, venenatis imperdiet lacus commodo. Morbi quis dictum urna, vel facilisis magna. Phasellus nec vehicula lectus. Nulla laoreet nisi nec varius rhoncus. Integer at risus blandit, commodo urna sed, viverra dui.

Duis vitae nisl dignissim, congue elit et, ornare dolor. Pellentesque eu dui pellentesque, vestibulum odio sit amet, vehicula ante. Curabitur et turpis velit. Pellentesque in tincidunt nulla. Aenean malesuada ornare condimentum. Vivamus maximus efficitur sem, non consectetur arcu pretium in. Integer sodales quis quam nec iaculis. Donec accumsan tortor et magna tristique euismod. Nullam pellentesque, ligula nec condimentum rhoncus, arcu dui mollis lectus, ac porttitor purus nisi sed lacus."
                              onInput={[Function]}
                              rows={8}
                              size="large"
                              spellCheck={false}
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Hello World"
        rows={1}
        size="large"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Hello World",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Hello World",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": true,
                        "controlRef": [Function],
                        "defaultValue": "Hello World",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": false,
                        "rows": 1,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          autoSize={true}
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": true,
                              "controlRef": [Function],
                              "defaultValue": "Hello World",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": false,
                              "rows": 1,
                              "size": "large",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Hello World"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={false}
                          rows={1}
                          size="large"
                        >
                          <Styled(textarea)
                            autoSize={true}
                            className="emotion-1"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": true,
                                "controlRef": [Function],
                                "defaultValue": "Hello World",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": false,
                                "rows": 1,
                                "size": "large",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Hello World"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={false}
                            rows={1}
                            size="large"
                          >
                            <textarea
                              className="emotion-0"
                              defaultValue="Hello World"
                              onInput={[Function]}
                              rows={1}
                              size="large"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        autoSize={true}
        defaultValue="Hello World"
        rows={1}
        size="small"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": true,
              "controlRef": [Function],
              "defaultValue": "Hello World",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": false,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": true,
                "controlRef": [Function],
                "defaultValue": "Hello World",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": false,
                "rows": 1,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Hello World",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "small",
                }
              }
              iconEnd={null}
              size="small"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": true,
                        "controlRef": [Function],
                        "defaultValue": "Hello World",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": false,
                        "rows": 1,
                        "size": "small",
                      }
                    }
                    iconEnd={null}
                    size="small"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          autoSize={true}
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": true,
                              "controlRef": [Function],
                              "defaultValue": "Hello World",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": false,
                              "rows": 1,
                              "size": "small",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Hello World"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={false}
                          rows={1}
                          size="small"
                        >
                          <Styled(textarea)
                            autoSize={true}
                            className="emotion-17"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": true,
                                "controlRef": [Function],
                                "defaultValue": "Hello World",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": false,
                                "rows": 1,
                                "size": "small",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Hello World"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={false}
                            rows={1}
                            size="small"
                          >
                            <textarea
                              className="emotion-16"
                              defaultValue="Hello World"
                              onInput={[Function]}
                              rows={1}
                              size="small"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: controlled 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<Component>
  <MyForm>
    <TextArea
      onChange={[Function]}
      size="large"
      value="Hello World"
    >
      <Styled(WithTheme(Themed(FauxControl)))
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "textarea",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(textarea)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "disabled": undefined,
            "onChange": [Function],
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
            "value": "Hello World",
          }
        }
        iconEnd={null}
        size="large"
      >
        <WithTheme(Themed(FauxControl))
          className="emotion-4"
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "disabled": undefined,
              "onChange": [Function],
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
              "value": "Hello World",
            }
          }
          iconEnd={null}
          size="large"
        >
          <Themed(FauxControl)
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "disabled": undefined,
                "onChange": [Function],
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
                "value": "Hello World",
              }
            }
            iconEnd={null}
            size="large"
          >
            <ThemeProvider>
              <ThemeProvider>
                <FauxControl
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "disabled": undefined,
                      "onChange": [Function],
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                      "value": "Hello World",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <Styled(div)
                    className="emotion-4"
                  >
                    <div
                      className="emotion-3"
                    >
                      <Styled(input)
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlPropsIn={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": undefined,
                            "controlRef": [Function],
                            "disabled": undefined,
                            "onChange": [Function],
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": true,
                            "rows": 8,
                            "size": "large",
                            "value": "Hello World",
                          }
                        }
                        controlRef={[Function]}
                        iconEnd={null}
                        key="control"
                        onChange={[Function]}
                        onInput={[Function]}
                        resizeable={true}
                        rows={8}
                        size="large"
                        value="Hello World"
                      >
                        <Styled(textarea)
                          className="emotion-1"
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "disabled": undefined,
                              "onChange": [Function],
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 8,
                              "size": "large",
                              "value": "Hello World",
                            }
                          }
                          controlRef={[Function]}
                          iconEnd={null}
                          onChange={[Function]}
                          onInput={[Function]}
                          resizeable={true}
                          rows={8}
                          size="large"
                          value="Hello World"
                        >
                          <textarea
                            className="emotion-0"
                            onChange={[Function]}
                            onInput={[Function]}
                            rows={8}
                            size="large"
                            value="Hello World"
                          />
                        </Styled(textarea)>
                      </Styled(input)>
                      <Styled(div)>
                        <div
                          className="emotion-2"
                        />
                      </Styled(div)>
                    </div>
                  </Styled(div)>
                </FauxControl>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(FauxControl)>
        </WithTheme(Themed(FauxControl))>
      </Styled(WithTheme(Themed(FauxControl)))>
    </TextArea>
  </MyForm>
</Component>
`;

exports[`TextArea demo examples Snapshots: disabled 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: none;
}

.emotion-1 {
  color: #afbacc;
  -webkit-text-fill-color: #afbacc;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #afbacc;
  -webkit-text-fill-color: #afbacc;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  defaultValue="Hello World"
  disabled={true}
  size="large"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "textarea",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(textarea)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": true,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    disabled={true}
    iconEnd={null}
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "textarea",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(textarea)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": true,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      disabled={true}
      iconEnd={null}
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "textarea",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(textarea)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Hello World",
            "disabled": true,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        disabled={true}
        iconEnd={null}
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Hello World",
                  "disabled": true,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              disabled={true}
              iconEnd={null}
              size="large"
            >
              <Styled(div)
                className="emotion-4"
                disabled={true}
              >
                <div
                  className="emotion-3"
                  disabled={true}
                >
                  <Styled(input)
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Hello World",
                        "disabled": true,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    controlRef={[Function]}
                    defaultValue="Hello World"
                    disabled={true}
                    iconEnd={null}
                    key="control"
                    onInput={[Function]}
                    resizeable={true}
                    rows={8}
                    size="large"
                  >
                    <Styled(textarea)
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Hello World",
                          "disabled": true,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 8,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Hello World"
                      disabled={true}
                      iconEnd={null}
                      onInput={[Function]}
                      resizeable={true}
                      rows={8}
                      size="large"
                    >
                      <textarea
                        className="emotion-0"
                        defaultValue="Hello World"
                        disabled={true}
                        onInput={[Function]}
                        rows={8}
                        size="large"
                      />
                    </Styled(textarea)>
                  </Styled(input)>
                  <Styled(div)
                    disabled={true}
                  >
                    <div
                      className="emotion-2"
                      disabled={true}
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: form-field 1`] = `
.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-5:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-5:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-5:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-3::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-3::-ms-clear {
  display: none;
}

.emotion-3:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-4 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-12[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-2 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-2::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-2::-ms-clear {
  display: none;
}

.emotion-2:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-11 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
}

.emotion-11 *,
.emotion-11 *::before,
.emotion-11 *::after {
  box-sizing: inherit;
}

.emotion-1 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 0.875em;
  font-weight: 600;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0.5em;
}

.emotion-1 > * {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
  display: inline-block;
}

.emotion-0 {
  color: #de1b1b;
  font-size: 0.6875em;
  font-weight: 400;
}

.emotion-10 {
  color: #58606e;
  font-size: 0.6875em;
  margin-top: 0.18181818181818182em;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-12"
    >
      <FormField
        autoSize={true}
        caption="Please keep comments brief and descriptive"
        input={[Function]}
        label="Comments"
        required={true}
        requiredText="Required"
        rows={2}
      >
        <Styled(div)>
          <div
            className="emotion-11"
          >
            <label>
              <Styled(div)
                key="formField-1-textWrapper"
              >
                <div
                  className="emotion-1"
                >
                  <span
                    id="formField-1-labelText"
                  >
                    Comments
                  </span>
                  <Styled(span)>
                    <span
                      className="emotion-0"
                    >
                      Required
                    </span>
                  </Styled(span)>
                </div>
              </Styled(div)>
              <TextArea
                aria-describedby="formField-1-caption"
                autoSize={true}
                key="formField-1-control"
                required={true}
                rows={2}
                size="large"
              >
                <Styled(WithTheme(Themed(FauxControl)))
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-describedby": "formField-1-caption",
                      "aria-invalid": undefined,
                      "aria-required": true,
                      "autoSize": true,
                      "controlRef": [Function],
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": true,
                      "resizeable": false,
                      "rows": 2,
                      "size": "large",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <WithTheme(Themed(FauxControl))
                    className="emotion-6"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-describedby": "formField-1-caption",
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "autoSize": true,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": true,
                        "resizeable": false,
                        "rows": 2,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                  >
                    <Themed(FauxControl)
                      className="emotion-6"
                      control={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "textarea",
                          "__emotion_forwardProp": undefined,
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "displayName": "Styled(textarea)",
                          "render": [Function],
                          "withComponent": [Function],
                        }
                      }
                      controlProps={
                        Object {
                          "aria-describedby": "formField-1-caption",
                          "aria-invalid": undefined,
                          "aria-required": true,
                          "autoSize": true,
                          "controlRef": [Function],
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": true,
                          "resizeable": false,
                          "rows": 2,
                          "size": "large",
                        }
                      }
                      iconEnd={null}
                      size="large"
                    >
                      <ThemeProvider>
                        <ThemeProvider>
                          <FauxControl
                            className="emotion-6"
                            control={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "__emotion_base": "textarea",
                                "__emotion_forwardProp": undefined,
                                "__emotion_real": [Circular],
                                "__emotion_styles": Array [
                                  [Function],
                                ],
                                "defaultProps": undefined,
                                "displayName": "Styled(textarea)",
                                "render": [Function],
                                "withComponent": [Function],
                              }
                            }
                            controlProps={
                              Object {
                                "aria-describedby": "formField-1-caption",
                                "aria-invalid": undefined,
                                "aria-required": true,
                                "autoSize": true,
                                "controlRef": [Function],
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": true,
                                "resizeable": false,
                                "rows": 2,
                                "size": "large",
                              }
                            }
                            iconEnd={null}
                            size="large"
                          >
                            <Styled(div)
                              className="emotion-6"
                            >
                              <div
                                className="emotion-5"
                              >
                                <Styled(input)
                                  aria-describedby="formField-1-caption"
                                  aria-required={true}
                                  as={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "textarea",
                                      "__emotion_forwardProp": undefined,
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "displayName": "Styled(textarea)",
                                      "render": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  autoSize={true}
                                  controlPropsIn={
                                    Object {
                                      "aria-describedby": "formField-1-caption",
                                      "aria-invalid": undefined,
                                      "aria-required": true,
                                      "autoSize": true,
                                      "controlRef": [Function],
                                      "disabled": undefined,
                                      "onInput": [Function],
                                      "readOnly": undefined,
                                      "required": true,
                                      "resizeable": false,
                                      "rows": 2,
                                      "size": "large",
                                    }
                                  }
                                  controlRef={[Function]}
                                  iconEnd={null}
                                  key="control"
                                  onInput={[Function]}
                                  required={true}
                                  resizeable={false}
                                  rows={2}
                                  size="large"
                                >
                                  <Styled(textarea)
                                    aria-describedby="formField-1-caption"
                                    aria-required={true}
                                    autoSize={true}
                                    className="emotion-3"
                                    controlPropsIn={
                                      Object {
                                        "aria-describedby": "formField-1-caption",
                                        "aria-invalid": undefined,
                                        "aria-required": true,
                                        "autoSize": true,
                                        "controlRef": [Function],
                                        "disabled": undefined,
                                        "onInput": [Function],
                                        "readOnly": undefined,
                                        "required": true,
                                        "resizeable": false,
                                        "rows": 2,
                                        "size": "large",
                                      }
                                    }
                                    controlRef={[Function]}
                                    iconEnd={null}
                                    onInput={[Function]}
                                    required={true}
                                    resizeable={false}
                                    rows={2}
                                    size="large"
                                  >
                                    <textarea
                                      aria-describedby="formField-1-caption"
                                      aria-required={true}
                                      className="emotion-2"
                                      onInput={[Function]}
                                      required={true}
                                      rows={2}
                                      size="large"
                                    />
                                  </Styled(textarea)>
                                </Styled(input)>
                                <Styled(div)>
                                  <div
                                    className="emotion-4"
                                  />
                                </Styled(div)>
                              </div>
                            </Styled(div)>
                          </FauxControl>
                        </ThemeProvider>
                      </ThemeProvider>
                    </Themed(FauxControl)>
                  </WithTheme(Themed(FauxControl))>
                </Styled(WithTheme(Themed(FauxControl)))>
              </TextArea>
            </label>
            <Styled(div)
              caption="Please keep comments brief and descriptive"
              id="formField-1-caption"
              isGroup={false}
            >
              <div
                className="emotion-10"
                id="formField-1-caption"
              >
                Please keep comments brief and descriptive
              </div>
            </Styled(div)>
          </div>
        </Styled(div)>
      </FormField>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: input-ref 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-11[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-10 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-10 *,
.emotion-10 *::before,
.emotion-10 *::after {
  box-sizing: inherit;
}

.emotion-10:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-10:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-10:focus:active,
.emotion-10:focus:hover {
  border-color: #c8d1e0;
}

.emotion-10:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-10::-moz-focus-inner {
  border: 0;
}

.emotion-10 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-10 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-10 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-10 [role="img"]:only-child {
  margin: 0;
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-8 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-8:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-8:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <DemoLayout>
      <Styled(div)
        marginBottom="1rem"
      >
        <div
          className="emotion-11"
        >
          <TextArea
            inputRef={[Function]}
            size="large"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "textarea",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(textarea)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 8,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 8,
                      "size": "large",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": undefined,
                            "controlRef": [Function],
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": true,
                            "rows": 8,
                            "size": "large",
                          }
                        }
                        iconEnd={null}
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "textarea",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(textarea)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "autoSize": undefined,
                                  "controlRef": [Function],
                                  "disabled": undefined,
                                  "onInput": [Function],
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "resizeable": true,
                                  "rows": 8,
                                  "size": "large",
                                }
                              }
                              controlRef={[Function]}
                              iconEnd={null}
                              key="control"
                              onInput={[Function]}
                              resizeable={true}
                              rows={8}
                              size="large"
                            >
                              <Styled(textarea)
                                className="emotion-1"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "autoSize": undefined,
                                    "controlRef": [Function],
                                    "disabled": undefined,
                                    "onInput": [Function],
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "resizeable": true,
                                    "rows": 8,
                                    "size": "large",
                                  }
                                }
                                controlRef={[Function]}
                                iconEnd={null}
                                onInput={[Function]}
                                resizeable={true}
                                rows={8}
                                size="large"
                              >
                                <textarea
                                  className="emotion-0"
                                  onInput={[Function]}
                                  rows={8}
                                  size="large"
                                />
                              </Styled(textarea)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextArea>
          <WithForwardRef(Button)
            onClick={[Function]}
            size="large"
          >
            <Button
              forwardedRef={null}
              onClick={[Function]}
              size="large"
            >
              <Styled(button)
                onClick={[Function]}
                size="large"
                text="Focus the input"
              >
                <button
                  className="emotion-10"
                  onClick={[Function]}
                  size="large"
                >
                  <Styled(span)>
                    <span
                      className="emotion-9"
                    >
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-8"
                          size="large"
                        >
                          Focus the input
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
      </Styled(div)>
    </DemoLayout>
  </MyForm>
</Component>
`;

exports[`TextArea demo examples Snapshots: invalid 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  invalid={true}
  size="large"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "textarea",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(textarea)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": true,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "textarea",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(textarea)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": true,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "textarea",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(textarea)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": true,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": true,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    aria-invalid={true}
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": true,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    controlRef={[Function]}
                    iconEnd={null}
                    key="control"
                    onInput={[Function]}
                    resizeable={true}
                    rows={8}
                    size="large"
                  >
                    <Styled(textarea)
                      aria-invalid={true}
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": true,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 8,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      iconEnd={null}
                      onInput={[Function]}
                      resizeable={true}
                      rows={8}
                      size="large"
                    >
                      <textarea
                        aria-invalid={true}
                        className="emotion-0"
                        onInput={[Function]}
                        rows={8}
                        size="large"
                      />
                    </Styled(textarea)>
                  </Styled(input)>
                  <Styled(div)>
                    <div
                      className="emotion-2"
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: next-to-other-inputs 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-55 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-55::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-55::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-55:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-55::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-55::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-55:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-55::-ms-clear {
  display: none;
}

.emotion-55:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-54 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-54::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-54::-ms-clear {
  display: none;
}

.emotion-54:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-28 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-28::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-28::-ms-clear {
  display: none;
}

.emotion-28:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-27 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-27::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-27::-ms-clear {
  display: none;
}

.emotion-27:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-81 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-81::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-81::-ms-clear {
  display: none;
}

.emotion-81:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-62 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-62::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-62::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-62:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-62::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-62::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-62:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-62::-ms-clear {
  display: none;
}

.emotion-62:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-8 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-8::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-clear {
  display: none;
}

.emotion-8:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-80 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-80 *,
.emotion-80 *::before,
.emotion-80 *::after {
  box-sizing: inherit;
}

.emotion-80:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-80:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-80:focus:active,
.emotion-80:focus:hover {
  border-color: #c8d1e0;
}

.emotion-80:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-80::-moz-focus-inner {
  border: 0;
}

.emotion-80 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-80 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-80 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-80 [role="img"]:only-child {
  margin: 0;
}

.emotion-25 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-78 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-78:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-78:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-109 > * {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-109 > * > div {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-108[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-108 > * {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-108 > * > div {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-20 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-20 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-20 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-19:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-19:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-19 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-19 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-16 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-16[type="search"] {
  -webkit-appearance: none;
}

.emotion-16[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-16::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-clear {
  display: none;
}

.emotion-16:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-26 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-26:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-26:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-26:focus:active,
.emotion-26:focus:hover {
  border-color: #c8d1e0;
}

.emotion-26:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-26::-moz-focus-inner {
  border: 0;
}

.emotion-26 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-26 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-26 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-26 [role="img"]:only-child {
  margin: 0;
}

.emotion-24 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.emotion-35 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-35::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::-ms-clear {
  display: none;
}

.emotion-35:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-43 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.2857142857142856em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-43[type="search"] {
  -webkit-appearance: none;
}

.emotion-43[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-43::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-43::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-43:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-43::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-43::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-43:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-43::-ms-clear {
  display: none;
}

.emotion-43:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-53 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-53 *,
.emotion-53 *::before,
.emotion-53 *::after {
  box-sizing: inherit;
}

.emotion-53:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-53:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-53:focus:active,
.emotion-53:focus:hover {
  border-color: #c8d1e0;
}

.emotion-53:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-53::-moz-focus-inner {
  border: 0;
}

.emotion-53 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-53 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-53 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-53 [role="img"]:only-child {
  margin: 0;
}

.emotion-51 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-70 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-70[type="search"] {
  -webkit-appearance: none;
}

.emotion-70[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-70::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-70::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-70:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-70::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-70::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-70:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-70::-ms-clear {
  display: none;
}

.emotion-70:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-89 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: none;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-89::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-89::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-89:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-89::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-89::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-89:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-89::-ms-clear {
  display: none;
}

.emotion-89:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-97 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.7142857142857144em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-97[type="search"] {
  -webkit-appearance: none;
}

.emotion-97[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-97::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-97::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-97:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-97::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-97::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-97:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-97::-ms-clear {
  display: none;
}

.emotion-97:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-107 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25em;
  margin: 0;
  min-width: 3.25em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-107 *,
.emotion-107 *::before,
.emotion-107 *::after {
  box-sizing: inherit;
}

.emotion-107:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-107:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-107:focus:active,
.emotion-107:focus:hover {
  border-color: #c8d1e0;
}

.emotion-107:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-107::-moz-focus-inner {
  border: 0;
}

.emotion-107 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-107 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-107 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-107 [role="img"]:only-child {
  margin: 0;
}

.emotion-105 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 3.7142857142857144em;
}

.emotion-105:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-105:last-child {
  padding-right: 0.5714285714285714em;
}

<Styled(DemoLayout)>
  <DemoLayout
    className="emotion-109"
  >
    <Styled(div)
      className="emotion-109"
      marginBottom="1rem"
    >
      <div
        className="emotion-108"
      >
        <div>
          <TextArea
            defaultValue="Small"
            rows={1}
            size="small"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "small",
                }
              }
              iconEnd={null}
              size="small"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "textarea",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(textarea)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "small",
                  }
                }
                iconEnd={null}
                size="small"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "small",
                    }
                  }
                  iconEnd={null}
                  size="small"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": undefined,
                            "controlRef": [Function],
                            "defaultValue": "Small",
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": true,
                            "rows": 1,
                            "size": "small",
                          }
                        }
                        iconEnd={null}
                        size="small"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "textarea",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(textarea)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "autoSize": undefined,
                                  "controlRef": [Function],
                                  "defaultValue": "Small",
                                  "disabled": undefined,
                                  "onInput": [Function],
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "resizeable": true,
                                  "rows": 1,
                                  "size": "small",
                                }
                              }
                              controlRef={[Function]}
                              defaultValue="Small"
                              iconEnd={null}
                              key="control"
                              onInput={[Function]}
                              resizeable={true}
                              rows={1}
                              size="small"
                            >
                              <Styled(textarea)
                                className="emotion-1"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "autoSize": undefined,
                                    "controlRef": [Function],
                                    "defaultValue": "Small",
                                    "disabled": undefined,
                                    "onInput": [Function],
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "resizeable": true,
                                    "rows": 1,
                                    "size": "small",
                                  }
                                }
                                controlRef={[Function]}
                                defaultValue="Small"
                                iconEnd={null}
                                onInput={[Function]}
                                resizeable={true}
                                rows={1}
                                size="small"
                              >
                                <textarea
                                  className="emotion-0"
                                  defaultValue="Small"
                                  onInput={[Function]}
                                  rows={1}
                                  size="small"
                                />
                              </Styled(textarea)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Small"
            rows={1}
            size="small"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "small",
                }
              }
              iconEnd={null}
              size="small"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "textarea",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(textarea)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "small",
                  }
                }
                iconEnd={null}
                size="small"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "small",
                    }
                  }
                  iconEnd={null}
                  size="small"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": true,
                            "controlRef": [Function],
                            "defaultValue": "Small",
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": false,
                            "rows": 1,
                            "size": "small",
                          }
                        }
                        iconEnd={null}
                        size="small"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "textarea",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(textarea)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              autoSize={true}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "autoSize": true,
                                  "controlRef": [Function],
                                  "defaultValue": "Small",
                                  "disabled": undefined,
                                  "onInput": [Function],
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "resizeable": false,
                                  "rows": 1,
                                  "size": "small",
                                }
                              }
                              controlRef={[Function]}
                              defaultValue="Small"
                              iconEnd={null}
                              key="control"
                              onInput={[Function]}
                              resizeable={false}
                              rows={1}
                              size="small"
                            >
                              <Styled(textarea)
                                autoSize={true}
                                className="emotion-1"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "autoSize": true,
                                    "controlRef": [Function],
                                    "defaultValue": "Small",
                                    "disabled": undefined,
                                    "onInput": [Function],
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "resizeable": false,
                                    "rows": 1,
                                    "size": "small",
                                  }
                                }
                                controlRef={[Function]}
                                defaultValue="Small"
                                iconEnd={null}
                                onInput={[Function]}
                                resizeable={false}
                                rows={1}
                                size="small"
                              >
                                <textarea
                                  className="emotion-8"
                                  defaultValue="Small"
                                  onInput={[Function]}
                                  rows={1}
                                  size="small"
                                />
                              </Styled(textarea)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextArea>
          <TextInput
            defaultValue="Small"
            size="small"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="small"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-20"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="small"
              >
                <Themed(FauxControl)
                  className="emotion-20"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="small"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-20"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Small",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="small"
                      >
                        <Styled(div)
                          className="emotion-20"
                        >
                          <div
                            className="emotion-19"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Small",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Small"
                              key="control"
                              size="small"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-1"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "Small",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="Small"
                                size="small"
                                type="text"
                              >
                                <input
                                  className="emotion-16"
                                  defaultValue="Small"
                                  size="small"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="small"
          >
            <Button
              forwardedRef={null}
              size="small"
            >
              <Styled(button)
                size="small"
                text="Small"
              >
                <button
                  className="emotion-26"
                  size="small"
                >
                  <Styled(span)>
                    <span
                      className="emotion-25"
                    >
                      <Styled(span)
                        size="small"
                      >
                        <span
                          className="emotion-24"
                          size="small"
                        >
                          Small
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
        <div>
          <TextArea
            defaultValue="Medium"
            rows={1}
            size="medium"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "medium",
                }
              }
              iconEnd={null}
              size="medium"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "textarea",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(textarea)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "medium",
                  }
                }
                iconEnd={null}
                size="medium"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "medium",
                    }
                  }
                  iconEnd={null}
                  size="medium"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": undefined,
                            "controlRef": [Function],
                            "defaultValue": "Medium",
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": true,
                            "rows": 1,
                            "size": "medium",
                          }
                        }
                        iconEnd={null}
                        size="medium"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "textarea",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(textarea)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "autoSize": undefined,
                                  "controlRef": [Function],
                                  "defaultValue": "Medium",
                                  "disabled": undefined,
                                  "onInput": [Function],
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "resizeable": true,
                                  "rows": 1,
                                  "size": "medium",
                                }
                              }
                              controlRef={[Function]}
                              defaultValue="Medium"
                              iconEnd={null}
                              key="control"
                              onInput={[Function]}
                              resizeable={true}
                              rows={1}
                              size="medium"
                            >
                              <Styled(textarea)
                                className="emotion-28"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "autoSize": undefined,
                                    "controlRef": [Function],
                                    "defaultValue": "Medium",
                                    "disabled": undefined,
                                    "onInput": [Function],
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "resizeable": true,
                                    "rows": 1,
                                    "size": "medium",
                                  }
                                }
                                controlRef={[Function]}
                                defaultValue="Medium"
                                iconEnd={null}
                                onInput={[Function]}
                                resizeable={true}
                                rows={1}
                                size="medium"
                              >
                                <textarea
                                  className="emotion-27"
                                  defaultValue="Medium"
                                  onInput={[Function]}
                                  rows={1}
                                  size="medium"
                                />
                              </Styled(textarea)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Medium"
            rows={1}
            size="medium"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "medium",
                }
              }
              iconEnd={null}
              size="medium"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "textarea",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(textarea)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "medium",
                  }
                }
                iconEnd={null}
                size="medium"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "medium",
                    }
                  }
                  iconEnd={null}
                  size="medium"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": true,
                            "controlRef": [Function],
                            "defaultValue": "Medium",
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": false,
                            "rows": 1,
                            "size": "medium",
                          }
                        }
                        iconEnd={null}
                        size="medium"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "textarea",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(textarea)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              autoSize={true}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "autoSize": true,
                                  "controlRef": [Function],
                                  "defaultValue": "Medium",
                                  "disabled": undefined,
                                  "onInput": [Function],
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "resizeable": false,
                                  "rows": 1,
                                  "size": "medium",
                                }
                              }
                              controlRef={[Function]}
                              defaultValue="Medium"
                              iconEnd={null}
                              key="control"
                              onInput={[Function]}
                              resizeable={false}
                              rows={1}
                              size="medium"
                            >
                              <Styled(textarea)
                                autoSize={true}
                                className="emotion-28"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "autoSize": true,
                                    "controlRef": [Function],
                                    "defaultValue": "Medium",
                                    "disabled": undefined,
                                    "onInput": [Function],
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "resizeable": false,
                                    "rows": 1,
                                    "size": "medium",
                                  }
                                }
                                controlRef={[Function]}
                                defaultValue="Medium"
                                iconEnd={null}
                                onInput={[Function]}
                                resizeable={false}
                                rows={1}
                                size="medium"
                              >
                                <textarea
                                  className="emotion-35"
                                  defaultValue="Medium"
                                  onInput={[Function]}
                                  rows={1}
                                  size="medium"
                                />
                              </Styled(textarea)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextArea>
          <TextInput
            defaultValue="Medium"
            size="medium"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="medium"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-20"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="medium"
              >
                <Themed(FauxControl)
                  className="emotion-20"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="medium"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-20"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Medium",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="medium"
                      >
                        <Styled(div)
                          className="emotion-20"
                        >
                          <div
                            className="emotion-19"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Medium",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Medium"
                              key="control"
                              size="medium"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-28"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "Medium",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="Medium"
                                size="medium"
                                type="text"
                              >
                                <input
                                  className="emotion-43"
                                  defaultValue="Medium"
                                  size="medium"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="medium"
          >
            <Button
              forwardedRef={null}
              size="medium"
            >
              <Styled(button)
                size="medium"
                text="Medium"
              >
                <button
                  className="emotion-53"
                  size="medium"
                >
                  <Styled(span)>
                    <span
                      className="emotion-25"
                    >
                      <Styled(span)
                        size="medium"
                      >
                        <span
                          className="emotion-51"
                          size="medium"
                        >
                          Medium
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
        <div>
          <TextArea
            defaultValue="Large"
            rows={1}
            size="large"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "textarea",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(textarea)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "large",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": undefined,
                            "controlRef": [Function],
                            "defaultValue": "Large",
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": true,
                            "rows": 1,
                            "size": "large",
                          }
                        }
                        iconEnd={null}
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "textarea",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(textarea)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "autoSize": undefined,
                                  "controlRef": [Function],
                                  "defaultValue": "Large",
                                  "disabled": undefined,
                                  "onInput": [Function],
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "resizeable": true,
                                  "rows": 1,
                                  "size": "large",
                                }
                              }
                              controlRef={[Function]}
                              defaultValue="Large"
                              iconEnd={null}
                              key="control"
                              onInput={[Function]}
                              resizeable={true}
                              rows={1}
                              size="large"
                            >
                              <Styled(textarea)
                                className="emotion-55"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "autoSize": undefined,
                                    "controlRef": [Function],
                                    "defaultValue": "Large",
                                    "disabled": undefined,
                                    "onInput": [Function],
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "resizeable": true,
                                    "rows": 1,
                                    "size": "large",
                                  }
                                }
                                controlRef={[Function]}
                                defaultValue="Large"
                                iconEnd={null}
                                onInput={[Function]}
                                resizeable={true}
                                rows={1}
                                size="large"
                              >
                                <textarea
                                  className="emotion-54"
                                  defaultValue="Large"
                                  onInput={[Function]}
                                  rows={1}
                                  size="large"
                                />
                              </Styled(textarea)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Large"
            rows={1}
            size="large"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "textarea",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(textarea)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "large",
                  }
                }
                iconEnd={null}
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "large",
                    }
                  }
                  iconEnd={null}
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": true,
                            "controlRef": [Function],
                            "defaultValue": "Large",
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": false,
                            "rows": 1,
                            "size": "large",
                          }
                        }
                        iconEnd={null}
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "textarea",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(textarea)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              autoSize={true}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "autoSize": true,
                                  "controlRef": [Function],
                                  "defaultValue": "Large",
                                  "disabled": undefined,
                                  "onInput": [Function],
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "resizeable": false,
                                  "rows": 1,
                                  "size": "large",
                                }
                              }
                              controlRef={[Function]}
                              defaultValue="Large"
                              iconEnd={null}
                              key="control"
                              onInput={[Function]}
                              resizeable={false}
                              rows={1}
                              size="large"
                            >
                              <Styled(textarea)
                                autoSize={true}
                                className="emotion-55"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "autoSize": true,
                                    "controlRef": [Function],
                                    "defaultValue": "Large",
                                    "disabled": undefined,
                                    "onInput": [Function],
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "resizeable": false,
                                    "rows": 1,
                                    "size": "large",
                                  }
                                }
                                controlRef={[Function]}
                                defaultValue="Large"
                                iconEnd={null}
                                onInput={[Function]}
                                resizeable={false}
                                rows={1}
                                size="large"
                              >
                                <textarea
                                  className="emotion-62"
                                  defaultValue="Large"
                                  onInput={[Function]}
                                  rows={1}
                                  size="large"
                                />
                              </Styled(textarea)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextArea>
          <TextInput
            defaultValue="Large"
            size="large"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-20"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-20"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-20"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Large",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-20"
                        >
                          <div
                            className="emotion-19"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Large",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Large"
                              key="control"
                              size="large"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-55"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "Large",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="Large"
                                size="large"
                                type="text"
                              >
                                <input
                                  className="emotion-70"
                                  defaultValue="Large"
                                  size="large"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="large"
          >
            <Button
              forwardedRef={null}
              size="large"
            >
              <Styled(button)
                size="large"
                text="Large"
              >
                <button
                  className="emotion-80"
                  size="large"
                >
                  <Styled(span)>
                    <span
                      className="emotion-25"
                    >
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-78"
                          size="large"
                        >
                          Large
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
        <div>
          <TextArea
            defaultValue="Jumbo"
            rows={1}
            size="jumbo"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "jumbo",
                }
              }
              iconEnd={null}
              size="jumbo"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "textarea",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(textarea)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": undefined,
                    "controlRef": [Function],
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": true,
                    "rows": 1,
                    "size": "jumbo",
                  }
                }
                iconEnd={null}
                size="jumbo"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": undefined,
                      "controlRef": [Function],
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": true,
                      "rows": 1,
                      "size": "jumbo",
                    }
                  }
                  iconEnd={null}
                  size="jumbo"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": undefined,
                            "controlRef": [Function],
                            "defaultValue": "Jumbo",
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": true,
                            "rows": 1,
                            "size": "jumbo",
                          }
                        }
                        iconEnd={null}
                        size="jumbo"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "textarea",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(textarea)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "autoSize": undefined,
                                  "controlRef": [Function],
                                  "defaultValue": "Jumbo",
                                  "disabled": undefined,
                                  "onInput": [Function],
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "resizeable": true,
                                  "rows": 1,
                                  "size": "jumbo",
                                }
                              }
                              controlRef={[Function]}
                              defaultValue="Jumbo"
                              iconEnd={null}
                              key="control"
                              onInput={[Function]}
                              resizeable={true}
                              rows={1}
                              size="jumbo"
                            >
                              <Styled(textarea)
                                className="emotion-55"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "autoSize": undefined,
                                    "controlRef": [Function],
                                    "defaultValue": "Jumbo",
                                    "disabled": undefined,
                                    "onInput": [Function],
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "resizeable": true,
                                    "rows": 1,
                                    "size": "jumbo",
                                  }
                                }
                                controlRef={[Function]}
                                defaultValue="Jumbo"
                                iconEnd={null}
                                onInput={[Function]}
                                resizeable={true}
                                rows={1}
                                size="jumbo"
                              >
                                <textarea
                                  className="emotion-81"
                                  defaultValue="Jumbo"
                                  onInput={[Function]}
                                  rows={1}
                                  size="jumbo"
                                />
                              </Styled(textarea)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextArea>
          <TextArea
            autoSize={true}
            defaultValue="Jumbo"
            rows={1}
            size="jumbo"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": true,
                  "controlRef": [Function],
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": false,
                  "rows": 1,
                  "size": "jumbo",
                }
              }
              iconEnd={null}
              size="jumbo"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-4"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "textarea",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(textarea)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "autoSize": true,
                    "controlRef": [Function],
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "onInput": [Function],
                    "readOnly": undefined,
                    "required": undefined,
                    "resizeable": false,
                    "rows": 1,
                    "size": "jumbo",
                  }
                }
                iconEnd={null}
                size="jumbo"
              >
                <Themed(FauxControl)
                  className="emotion-4"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "textarea",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(textarea)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "autoSize": true,
                      "controlRef": [Function],
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "onInput": [Function],
                      "readOnly": undefined,
                      "required": undefined,
                      "resizeable": false,
                      "rows": 1,
                      "size": "jumbo",
                    }
                  }
                  iconEnd={null}
                  size="jumbo"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-4"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "textarea",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(textarea)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "autoSize": true,
                            "controlRef": [Function],
                            "defaultValue": "Jumbo",
                            "disabled": undefined,
                            "onInput": [Function],
                            "readOnly": undefined,
                            "required": undefined,
                            "resizeable": false,
                            "rows": 1,
                            "size": "jumbo",
                          }
                        }
                        iconEnd={null}
                        size="jumbo"
                      >
                        <Styled(div)
                          className="emotion-4"
                        >
                          <div
                            className="emotion-3"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "textarea",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(textarea)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              autoSize={true}
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "autoSize": true,
                                  "controlRef": [Function],
                                  "defaultValue": "Jumbo",
                                  "disabled": undefined,
                                  "onInput": [Function],
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "resizeable": false,
                                  "rows": 1,
                                  "size": "jumbo",
                                }
                              }
                              controlRef={[Function]}
                              defaultValue="Jumbo"
                              iconEnd={null}
                              key="control"
                              onInput={[Function]}
                              resizeable={false}
                              rows={1}
                              size="jumbo"
                            >
                              <Styled(textarea)
                                autoSize={true}
                                className="emotion-55"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "autoSize": true,
                                    "controlRef": [Function],
                                    "defaultValue": "Jumbo",
                                    "disabled": undefined,
                                    "onInput": [Function],
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "resizeable": false,
                                    "rows": 1,
                                    "size": "jumbo",
                                  }
                                }
                                controlRef={[Function]}
                                defaultValue="Jumbo"
                                iconEnd={null}
                                onInput={[Function]}
                                resizeable={false}
                                rows={1}
                                size="jumbo"
                              >
                                <textarea
                                  className="emotion-89"
                                  defaultValue="Jumbo"
                                  onInput={[Function]}
                                  rows={1}
                                  size="jumbo"
                                />
                              </Styled(textarea)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextArea>
          <TextInput
            defaultValue="Jumbo"
            size="jumbo"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="jumbo"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-20"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="jumbo"
              >
                <Themed(FauxControl)
                  className="emotion-20"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="jumbo"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-20"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Jumbo",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="jumbo"
                      >
                        <Styled(div)
                          className="emotion-20"
                        >
                          <div
                            className="emotion-19"
                          >
                            <Styled(input)
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": undefined,
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "displayName": "Styled(input)",
                                  "render": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Jumbo",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Jumbo"
                              key="control"
                              size="jumbo"
                              type="text"
                            >
                              <Styled(input)
                                className="emotion-55"
                                controlPropsIn={
                                  Object {
                                    "aria-invalid": undefined,
                                    "aria-required": undefined,
                                    "controlRef": undefined,
                                    "defaultValue": "Jumbo",
                                    "disabled": undefined,
                                    "readOnly": undefined,
                                    "required": undefined,
                                    "type": "text",
                                  }
                                }
                                defaultValue="Jumbo"
                                size="jumbo"
                                type="text"
                              >
                                <input
                                  className="emotion-97"
                                  defaultValue="Jumbo"
                                  size="jumbo"
                                  type="text"
                                />
                              </Styled(input)>
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-2"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="jumbo"
          >
            <Button
              forwardedRef={null}
              size="jumbo"
            >
              <Styled(button)
                size="jumbo"
                text="Jumbo"
              >
                <button
                  className="emotion-107"
                  size="jumbo"
                >
                  <Styled(span)>
                    <span
                      className="emotion-25"
                    >
                      <Styled(span)
                        size="jumbo"
                      >
                        <span
                          className="emotion-105"
                          size="jumbo"
                        >
                          Jumbo
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
      </div>
    </Styled(div)>
  </DemoLayout>
</Styled(DemoLayout)>
`;

exports[`TextArea demo examples Snapshots: placeholder 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  placeholder="Leave a comment"
  size="large"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "textarea",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(textarea)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "placeholder": "Leave a comment",
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "textarea",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(textarea)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "placeholder": "Leave a comment",
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "textarea",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(textarea)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "disabled": undefined,
            "onInput": [Function],
            "placeholder": "Leave a comment",
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "disabled": undefined,
                  "onInput": [Function],
                  "placeholder": "Leave a comment",
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "onInput": [Function],
                        "placeholder": "Leave a comment",
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    controlRef={[Function]}
                    iconEnd={null}
                    key="control"
                    onInput={[Function]}
                    placeholder="Leave a comment"
                    resizeable={true}
                    rows={8}
                    size="large"
                  >
                    <Styled(textarea)
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "disabled": undefined,
                          "onInput": [Function],
                          "placeholder": "Leave a comment",
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 8,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      iconEnd={null}
                      onInput={[Function]}
                      placeholder="Leave a comment"
                      resizeable={true}
                      rows={8}
                      size="large"
                    >
                      <textarea
                        className="emotion-0"
                        onInput={[Function]}
                        placeholder="Leave a comment"
                        rows={8}
                        size="large"
                      />
                    </Styled(textarea)>
                  </Styled(input)>
                  <Styled(div)>
                    <div
                      className="emotion-2"
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: read-only 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-1 {
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #58606e;
  -webkit-text-fill-color: #58606e;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<TextArea
  defaultValue="Hello World"
  readOnly={true}
  size="large"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "textarea",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(textarea)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": true,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    readOnly={true}
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "textarea",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(textarea)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": true,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      readOnly={true}
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "textarea",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(textarea)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Hello World",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": true,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        iconEnd={null}
        readOnly={true}
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Hello World",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": true,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              readOnly={true}
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Hello World",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": true,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    controlRef={[Function]}
                    defaultValue="Hello World"
                    iconEnd={null}
                    key="control"
                    onInput={[Function]}
                    readOnly={true}
                    resizeable={true}
                    rows={8}
                    size="large"
                  >
                    <Styled(textarea)
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Hello World",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": true,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 8,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Hello World"
                      iconEnd={null}
                      onInput={[Function]}
                      readOnly={true}
                      resizeable={true}
                      rows={8}
                      size="large"
                    >
                      <textarea
                        className="emotion-0"
                        defaultValue="Hello World"
                        onInput={[Function]}
                        readOnly={true}
                        rows={8}
                        size="large"
                      />
                    </Styled(textarea)>
                  </Styled(input)>
                  <Styled(div)
                    readOnly={true}
                  >
                    <div
                      className="emotion-2"
                      readOnly={true}
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: required 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  required={true}
  size="large"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "textarea",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(textarea)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": true,
        "autoSize": undefined,
        "controlRef": [Function],
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": true,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "textarea",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(textarea)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": true,
          "autoSize": undefined,
          "controlRef": [Function],
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": true,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "textarea",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(textarea)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": true,
            "autoSize": undefined,
            "controlRef": [Function],
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": true,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": true,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": true,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    aria-required={true}
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": true,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": true,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    controlRef={[Function]}
                    iconEnd={null}
                    key="control"
                    onInput={[Function]}
                    required={true}
                    resizeable={true}
                    rows={8}
                    size="large"
                  >
                    <Styled(textarea)
                      aria-required={true}
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": true,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": true,
                          "resizeable": true,
                          "rows": 8,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      iconEnd={null}
                      onInput={[Function]}
                      required={true}
                      resizeable={true}
                      rows={8}
                      size="large"
                    >
                      <textarea
                        aria-required={true}
                        className="emotion-0"
                        onInput={[Function]}
                        required={true}
                        rows={8}
                        size="large"
                      />
                    </Styled(textarea)>
                  </Styled(input)>
                  <Styled(div)>
                    <div
                      className="emotion-2"
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: rows 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-17 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-17::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-clear {
  display: none;
}

.emotion-17:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-16 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-16::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-clear {
  display: none;
}

.emotion-16:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-32[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-9 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-9::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-clear {
  display: none;
}

.emotion-9:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-8 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-8::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-clear {
  display: none;
}

.emotion-8:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-24 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-24::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::-ms-clear {
  display: none;
}

.emotion-24:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-32"
    >
      <TextArea
        defaultValue="Small"
        rows={1}
        size="small"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Small",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "small",
                }
              }
              iconEnd={null}
              size="small"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Small",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 1,
                        "size": "small",
                      }
                    }
                    iconEnd={null}
                    size="small"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Small",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 1,
                              "size": "small",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Small"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={1}
                          size="small"
                        >
                          <Styled(textarea)
                            className="emotion-1"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Small",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 1,
                                "size": "small",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Small"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={1}
                            size="small"
                          >
                            <textarea
                              className="emotion-0"
                              defaultValue="Small"
                              onInput={[Function]}
                              rows={1}
                              size="small"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        defaultValue="Medium"
        rows={1}
        size="medium"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Medium",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "medium",
              }
            }
            iconEnd={null}
            size="medium"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "medium",
                }
              }
              iconEnd={null}
              size="medium"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Medium",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 1,
                        "size": "medium",
                      }
                    }
                    iconEnd={null}
                    size="medium"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Medium",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 1,
                              "size": "medium",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Medium"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={1}
                          size="medium"
                        >
                          <Styled(textarea)
                            className="emotion-9"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Medium",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 1,
                                "size": "medium",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Medium"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={1}
                            size="medium"
                          >
                            <textarea
                              className="emotion-8"
                              defaultValue="Medium"
                              onInput={[Function]}
                              rows={1}
                              size="medium"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        defaultValue="Large"
        rows={1}
        size="large"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Large",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Large",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 1,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Large",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 1,
                              "size": "large",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Large"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={1}
                          size="large"
                        >
                          <Styled(textarea)
                            className="emotion-17"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Large",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 1,
                                "size": "large",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Large"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={1}
                            size="large"
                          >
                            <textarea
                              className="emotion-16"
                              defaultValue="Large"
                              onInput={[Function]}
                              rows={1}
                              size="large"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        defaultValue="Jumbo"
        rows={1}
        size="jumbo"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 1,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 1,
                "size": "jumbo",
              }
            }
            iconEnd={null}
            size="jumbo"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 1,
                  "size": "jumbo",
                }
              }
              iconEnd={null}
              size="jumbo"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Jumbo",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 1,
                        "size": "jumbo",
                      }
                    }
                    iconEnd={null}
                    size="jumbo"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Jumbo",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 1,
                              "size": "jumbo",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Jumbo"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={1}
                          size="jumbo"
                        >
                          <Styled(textarea)
                            className="emotion-17"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Jumbo",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 1,
                                "size": "jumbo",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Jumbo"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={1}
                            size="jumbo"
                          >
                            <textarea
                              className="emotion-24"
                              defaultValue="Jumbo"
                              onInput={[Function]}
                              rows={1}
                              size="jumbo"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: rtl 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <TextArea
        defaultValue="مرحبا بالعالم"
        size="large"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "مرحبا بالعالم",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "مرحبا بالعالم",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "مرحبا بالعالم",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "مرحبا بالعالم",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "مرحبا بالعالم",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 8,
                              "size": "large",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="مرحبا بالعالم"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={8}
                          size="large"
                        >
                          <Styled(textarea)
                            className="emotion-1"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "مرحبا بالعالم",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 8,
                                "size": "large",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="مرحبا بالعالم"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={8}
                            size="large"
                          >
                            <textarea
                              className="emotion-0"
                              defaultValue="مرحبا بالعالم"
                              onInput={[Function]}
                              rows={8}
                              size="large"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`TextArea demo examples Snapshots: size 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-17 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-17::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-clear {
  display: none;
}

.emotion-17:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-16 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-16::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-clear {
  display: none;
}

.emotion-16:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-32[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.6770833333333333em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.16666666666666666em;
  padding-top: 0.16666666666666666em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-9 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-9::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-clear {
  display: none;
}

.emotion-9:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-8 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 1.9866071428571428em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.32142857142857145em;
  padding-top: 0.32142857142857145em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-8::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-clear {
  display: none;
}

.emotion-8:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-24 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 3.4151785714285716em;
  min-width: 0;
  outline: 0;
  padding-bottom: 1.0357142857142858em;
  padding-top: 1.0357142857142858em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-24::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-24::-ms-clear {
  display: none;
}

.emotion-24:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-32"
    >
      <TextArea
        defaultValue="Small"
        size="small"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Small",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 2,
              "size": "small",
            }
          }
          iconEnd={null}
          size="small"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Small",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 2,
                "size": "small",
              }
            }
            iconEnd={null}
            size="small"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 2,
                  "size": "small",
                }
              }
              iconEnd={null}
              size="small"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Small",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 2,
                        "size": "small",
                      }
                    }
                    iconEnd={null}
                    size="small"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Small",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 2,
                              "size": "small",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Small"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={2}
                          size="small"
                        >
                          <Styled(textarea)
                            className="emotion-1"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Small",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 2,
                                "size": "small",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Small"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={2}
                            size="small"
                          >
                            <textarea
                              className="emotion-0"
                              defaultValue="Small"
                              onInput={[Function]}
                              rows={2}
                              size="small"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        defaultValue="Medium"
        size="medium"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Medium",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 6,
              "size": "medium",
            }
          }
          iconEnd={null}
          size="medium"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Medium",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 6,
                "size": "medium",
              }
            }
            iconEnd={null}
            size="medium"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 6,
                  "size": "medium",
                }
              }
              iconEnd={null}
              size="medium"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Medium",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 6,
                        "size": "medium",
                      }
                    }
                    iconEnd={null}
                    size="medium"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Medium",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 6,
                              "size": "medium",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Medium"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={6}
                          size="medium"
                        >
                          <Styled(textarea)
                            className="emotion-9"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Medium",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 6,
                                "size": "medium",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Medium"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={6}
                            size="medium"
                          >
                            <textarea
                              className="emotion-8"
                              defaultValue="Medium"
                              onInput={[Function]}
                              rows={6}
                              size="medium"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        defaultValue="Large"
        size="large"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Large",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Large",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Large",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Large",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 8,
                              "size": "large",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Large"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={8}
                          size="large"
                        >
                          <Styled(textarea)
                            className="emotion-17"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Large",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 8,
                                "size": "large",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Large"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={8}
                            size="large"
                          >
                            <textarea
                              className="emotion-16"
                              defaultValue="Large"
                              onInput={[Function]}
                              rows={8}
                              size="large"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        defaultValue="Jumbo"
        size="jumbo"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Jumbo",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 12,
              "size": "jumbo",
            }
          }
          iconEnd={null}
          size="jumbo"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Jumbo",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 12,
                "size": "jumbo",
              }
            }
            iconEnd={null}
            size="jumbo"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 12,
                  "size": "jumbo",
                }
              }
              iconEnd={null}
              size="jumbo"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Jumbo",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 12,
                        "size": "jumbo",
                      }
                    }
                    iconEnd={null}
                    size="jumbo"
                  >
                    <Styled(div)
                      className="emotion-4"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Jumbo",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 12,
                              "size": "jumbo",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Jumbo"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={12}
                          size="jumbo"
                        >
                          <Styled(textarea)
                            className="emotion-17"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Jumbo",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 12,
                                "size": "jumbo",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Jumbo"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={12}
                            size="jumbo"
                          >
                            <textarea
                              className="emotion-24"
                              defaultValue="Jumbo"
                              onInput={[Function]}
                              rows={12}
                              size="jumbo"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)>
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
    </div>
  </Styled(div)>
</DemoLayout>
`;

exports[`TextArea demo examples Snapshots: uncontrolled 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<TextArea
  defaultValue="Hello World"
  size="large"
>
  <Styled(WithTheme(Themed(FauxControl)))
    control={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "textarea",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          [Function],
        ],
        "defaultProps": undefined,
        "displayName": "Styled(textarea)",
        "render": [Function],
        "withComponent": [Function],
      }
    }
    controlProps={
      Object {
        "aria-invalid": undefined,
        "aria-required": undefined,
        "autoSize": undefined,
        "controlRef": [Function],
        "defaultValue": "Hello World",
        "disabled": undefined,
        "onInput": [Function],
        "readOnly": undefined,
        "required": undefined,
        "resizeable": true,
        "rows": 8,
        "size": "large",
      }
    }
    iconEnd={null}
    size="large"
  >
    <WithTheme(Themed(FauxControl))
      className="emotion-4"
      control={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "textarea",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            [Function],
          ],
          "defaultProps": undefined,
          "displayName": "Styled(textarea)",
          "render": [Function],
          "withComponent": [Function],
        }
      }
      controlProps={
        Object {
          "aria-invalid": undefined,
          "aria-required": undefined,
          "autoSize": undefined,
          "controlRef": [Function],
          "defaultValue": "Hello World",
          "disabled": undefined,
          "onInput": [Function],
          "readOnly": undefined,
          "required": undefined,
          "resizeable": true,
          "rows": 8,
          "size": "large",
        }
      }
      iconEnd={null}
      size="large"
    >
      <Themed(FauxControl)
        className="emotion-4"
        control={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "textarea",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              [Function],
            ],
            "defaultProps": undefined,
            "displayName": "Styled(textarea)",
            "render": [Function],
            "withComponent": [Function],
          }
        }
        controlProps={
          Object {
            "aria-invalid": undefined,
            "aria-required": undefined,
            "autoSize": undefined,
            "controlRef": [Function],
            "defaultValue": "Hello World",
            "disabled": undefined,
            "onInput": [Function],
            "readOnly": undefined,
            "required": undefined,
            "resizeable": true,
            "rows": 8,
            "size": "large",
          }
        }
        iconEnd={null}
        size="large"
      >
        <ThemeProvider>
          <ThemeProvider>
            <FauxControl
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Hello World",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
            >
              <Styled(div)
                className="emotion-4"
              >
                <div
                  className="emotion-3"
                >
                  <Styled(input)
                    as={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlPropsIn={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Hello World",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    controlRef={[Function]}
                    defaultValue="Hello World"
                    iconEnd={null}
                    key="control"
                    onInput={[Function]}
                    resizeable={true}
                    rows={8}
                    size="large"
                  >
                    <Styled(textarea)
                      className="emotion-1"
                      controlPropsIn={
                        Object {
                          "aria-invalid": undefined,
                          "aria-required": undefined,
                          "autoSize": undefined,
                          "controlRef": [Function],
                          "defaultValue": "Hello World",
                          "disabled": undefined,
                          "onInput": [Function],
                          "readOnly": undefined,
                          "required": undefined,
                          "resizeable": true,
                          "rows": 8,
                          "size": "large",
                        }
                      }
                      controlRef={[Function]}
                      defaultValue="Hello World"
                      iconEnd={null}
                      onInput={[Function]}
                      resizeable={true}
                      rows={8}
                      size="large"
                    >
                      <textarea
                        className="emotion-0"
                        defaultValue="Hello World"
                        onInput={[Function]}
                        rows={8}
                        size="large"
                      />
                    </Styled(textarea)>
                  </Styled(input)>
                  <Styled(div)>
                    <div
                      className="emotion-2"
                    />
                  </Styled(div)>
                </div>
              </Styled(div)>
            </FauxControl>
          </ThemeProvider>
        </ThemeProvider>
      </Themed(FauxControl)>
    </WithTheme(Themed(FauxControl))>
  </Styled(WithTheme(Themed(FauxControl)))>
</TextArea>
`;

exports[`TextArea demo examples Snapshots: variants 1`] = `
.emotion-4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-24[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-3 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3:hover > div:last-child {
  border-color: #3ba164;
}

.emotion-3:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-3:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-1 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-1::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-1::-ms-clear {
  display: none;
}

.emotion-1:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-0 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-0::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-0::-ms-clear {
  display: none;
}

.emotion-0:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
}

.emotion-2 {
  background-color: #ffffff;
  border-color: #2a854e;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-11 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-11 *,
.emotion-11 *::before,
.emotion-11 *::after {
  box-sizing: inherit;
}

.emotion-11:hover > div:last-child {
  border-color: #cf7911;
}

.emotion-11:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-11:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-9 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-9::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-9::-ms-clear {
  display: none;
}

.emotion-9:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-8 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-8::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-8::-ms-clear {
  display: none;
}

.emotion-8:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
}

.emotion-10 {
  background-color: #ffffff;
  border-color: #ad5f00;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-19 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-19 *,
.emotion-19 *::before,
.emotion-19 *::after {
  box-sizing: inherit;
}

.emotion-19:hover > div:last-child {
  border-color: #f55353;
}

.emotion-19:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-19:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-17 {
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-17::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-17::-ms-clear {
  display: none;
}

.emotion-17:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-16 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  line-height: 1.5;
  margin: 1px;
  min-height: 2.5580357142857144em;
  min-width: 0;
  outline: 0;
  padding-bottom: 0.6071428571428571em;
  padding-top: 0.6071428571428571em;
  resize: vertical;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 0;
}

.emotion-16::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-16::-ms-clear {
  display: none;
}

.emotion-16:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
}

.emotion-18 {
  background-color: #ffffff;
  border-color: #de1b1b;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

<DemoLayout>
  <Styled(div)
    marginBottom="1rem"
  >
    <div
      className="emotion-24"
    >
      <TextArea
        defaultValue="Success"
        size="large"
        variant="success"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Success",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="success"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Success",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
            variant="success"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Success",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
              variant="success"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Success",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                    variant="success"
                  >
                    <Styled(div)
                      className="emotion-4"
                      variant="success"
                    >
                      <div
                        className="emotion-3"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Success",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 8,
                              "size": "large",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Success"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={8}
                          size="large"
                          variant="success"
                        >
                          <Styled(textarea)
                            className="emotion-1"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Success",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 8,
                                "size": "large",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Success"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={8}
                            size="large"
                            variant="success"
                          >
                            <textarea
                              className="emotion-0"
                              defaultValue="Success"
                              onInput={[Function]}
                              rows={8}
                              size="large"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)
                          variant="success"
                        >
                          <div
                            className="emotion-2"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        defaultValue="Warning"
        size="large"
        variant="warning"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Warning",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="warning"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Warning",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
            variant="warning"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Warning",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
              variant="warning"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Warning",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                    variant="warning"
                  >
                    <Styled(div)
                      className="emotion-4"
                      variant="warning"
                    >
                      <div
                        className="emotion-11"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Warning",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 8,
                              "size": "large",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Warning"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={8}
                          size="large"
                          variant="warning"
                        >
                          <Styled(textarea)
                            className="emotion-9"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Warning",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 8,
                                "size": "large",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Warning"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={8}
                            size="large"
                            variant="warning"
                          >
                            <textarea
                              className="emotion-8"
                              defaultValue="Warning"
                              onInput={[Function]}
                              rows={8}
                              size="large"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)
                          variant="warning"
                        >
                          <div
                            className="emotion-10"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
      <TextArea
        defaultValue="Danger"
        size="large"
        variant="danger"
      >
        <Styled(WithTheme(Themed(FauxControl)))
          control={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "textarea",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                [Function],
              ],
              "defaultProps": undefined,
              "displayName": "Styled(textarea)",
              "render": [Function],
              "withComponent": [Function],
            }
          }
          controlProps={
            Object {
              "aria-invalid": undefined,
              "aria-required": undefined,
              "autoSize": undefined,
              "controlRef": [Function],
              "defaultValue": "Danger",
              "disabled": undefined,
              "onInput": [Function],
              "readOnly": undefined,
              "required": undefined,
              "resizeable": true,
              "rows": 8,
              "size": "large",
            }
          }
          iconEnd={null}
          size="large"
          variant="danger"
        >
          <WithTheme(Themed(FauxControl))
            className="emotion-4"
            control={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "textarea",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  [Function],
                ],
                "defaultProps": undefined,
                "displayName": "Styled(textarea)",
                "render": [Function],
                "withComponent": [Function],
              }
            }
            controlProps={
              Object {
                "aria-invalid": undefined,
                "aria-required": undefined,
                "autoSize": undefined,
                "controlRef": [Function],
                "defaultValue": "Danger",
                "disabled": undefined,
                "onInput": [Function],
                "readOnly": undefined,
                "required": undefined,
                "resizeable": true,
                "rows": 8,
                "size": "large",
              }
            }
            iconEnd={null}
            size="large"
            variant="danger"
          >
            <Themed(FauxControl)
              className="emotion-4"
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "textarea",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(textarea)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "autoSize": undefined,
                  "controlRef": [Function],
                  "defaultValue": "Danger",
                  "disabled": undefined,
                  "onInput": [Function],
                  "readOnly": undefined,
                  "required": undefined,
                  "resizeable": true,
                  "rows": 8,
                  "size": "large",
                }
              }
              iconEnd={null}
              size="large"
              variant="danger"
            >
              <ThemeProvider>
                <ThemeProvider>
                  <FauxControl
                    className="emotion-4"
                    control={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": "textarea",
                        "__emotion_forwardProp": undefined,
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "displayName": "Styled(textarea)",
                        "render": [Function],
                        "withComponent": [Function],
                      }
                    }
                    controlProps={
                      Object {
                        "aria-invalid": undefined,
                        "aria-required": undefined,
                        "autoSize": undefined,
                        "controlRef": [Function],
                        "defaultValue": "Danger",
                        "disabled": undefined,
                        "onInput": [Function],
                        "readOnly": undefined,
                        "required": undefined,
                        "resizeable": true,
                        "rows": 8,
                        "size": "large",
                      }
                    }
                    iconEnd={null}
                    size="large"
                    variant="danger"
                  >
                    <Styled(div)
                      className="emotion-4"
                      variant="danger"
                    >
                      <div
                        className="emotion-19"
                      >
                        <Styled(input)
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "textarea",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(textarea)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                          controlPropsIn={
                            Object {
                              "aria-invalid": undefined,
                              "aria-required": undefined,
                              "autoSize": undefined,
                              "controlRef": [Function],
                              "defaultValue": "Danger",
                              "disabled": undefined,
                              "onInput": [Function],
                              "readOnly": undefined,
                              "required": undefined,
                              "resizeable": true,
                              "rows": 8,
                              "size": "large",
                            }
                          }
                          controlRef={[Function]}
                          defaultValue="Danger"
                          iconEnd={null}
                          key="control"
                          onInput={[Function]}
                          resizeable={true}
                          rows={8}
                          size="large"
                          variant="danger"
                        >
                          <Styled(textarea)
                            className="emotion-17"
                            controlPropsIn={
                              Object {
                                "aria-invalid": undefined,
                                "aria-required": undefined,
                                "autoSize": undefined,
                                "controlRef": [Function],
                                "defaultValue": "Danger",
                                "disabled": undefined,
                                "onInput": [Function],
                                "readOnly": undefined,
                                "required": undefined,
                                "resizeable": true,
                                "rows": 8,
                                "size": "large",
                              }
                            }
                            controlRef={[Function]}
                            defaultValue="Danger"
                            iconEnd={null}
                            onInput={[Function]}
                            resizeable={true}
                            rows={8}
                            size="large"
                            variant="danger"
                          >
                            <textarea
                              className="emotion-16"
                              defaultValue="Danger"
                              onInput={[Function]}
                              rows={8}
                              size="large"
                            />
                          </Styled(textarea)>
                        </Styled(input)>
                        <Styled(div)
                          variant="danger"
                        >
                          <div
                            className="emotion-18"
                          />
                        </Styled(div)>
                      </div>
                    </Styled(div)>
                  </FauxControl>
                </ThemeProvider>
              </ThemeProvider>
            </Themed(FauxControl)>
          </WithTheme(Themed(FauxControl))>
        </Styled(WithTheme(Themed(FauxControl)))>
      </TextArea>
    </div>
  </Styled(div)>
</DemoLayout>
`;
